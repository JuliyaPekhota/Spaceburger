{"version":3,"sources":["components/MenuProfile/MenuProfile.module.css","components/ModalOverlay/ModalOverlay.module.css","components/Loader/Loader.module.css","components/FeedItem/FeedItem.module.css","pages/pages.module.css","pages/feed/feed.module.css","pages/profile/profile.module.css","components/Header/Header.tsx","utils/hooks.ts","utils/constants.ts","services/actions/User.ts","services/actions/actionsUser.ts","pages/login.tsx","components/MenuProfile/MenuProfile.tsx","pages/profile/profile.tsx","pages/forgot-password.tsx","pages/register.tsx","pages/reset-password.tsx","pages/not-found.tsx","utils/types.ts","services/actions/index.ts","services/actions/actionsIngredient.ts","components/IngredientInList/IngredientInList.tsx","components/BurgerIngredients/BurgerIngredients.tsx","images/check.svg","components/OrderDetails/OrderDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/actions/OrderDetails.ts","services/actions/actionsOrderDetails.ts","services/socketMiddleware.ts","components/IngredientInOrder/IngredientInOrder.tsx","images/load.svg","components/Loader/Loader.tsx","components/BurgerConstructor/BurgerConstructor.tsx","pages/home.tsx","utils/utils.ts","components/FeedItem/FeedItem.tsx","services/actions/wsActionTypes.ts","services/actions/actionsWs.ts","pages/feed/feed.tsx","pages/profile/orders.tsx","components/IngredientDetails/IngredientDetails.tsx","components/ProtectedRoute.tsx","components/PublicRoute.tsx","components/FeedDetails/FeedDetails.tsx","components/SwitchRoute.tsx","components/App/App.tsx","reportWebVitals.ts","services/reducers/OrderDetails.ts","services/reducers/User.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","services/store.ts","services/userInitMiddleware.ts","index.tsx","components/FeedDetails/FeedDetails.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/Header/Header.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/IngredientInList/IngredientInList.module.css","components/Modal/Modal.module.css","components/IngredientDetails/IngredientDetails.module.css","components/OrderDetails/OrderDetails.module.css","components/IngredientInOrder/IngredientInOrder.module.css"],"names":["module","exports","Header","pathname","useLocation","className","cn","s","header","navigation","content","links","to","isActive","includes","exact","type","logo","login","useAppThunkDispatch","useDispatch","useAppDispatch","useAppSelector","useSelector","BASE_URL","INIT_USER","AUTHORIZED","GET_USER","LOGIN","LOGOUT","PATCH_USER","INIT_ORDERS","POST_LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","POST_LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILED","POST_UPDATE_TOKEN","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","GET_INFO_USER","GET_INFO_SUCCESS","GET_INFO_FAILED","PATCH_INFO_USER","PATCH_INFO_FAILED","PATCH_INFO_SUCCESS","POST_REGISTRY_USER","RESPONSE_SUCCESS_REGISTRY","RESPONSE_FAILED_REGISTRY","POST_PASSWORD_REQUEST","RESPONSE_FAILED_PASSWORD","RESPONSE_SUCCESS_PASSWORD","POST_NEW_PASSWORD_REQUEST","RESPONSE_FAILED_NEW_PASSWORD","RESPONSE_SUCCESS_NEW_PASSWORD","logout","data","dispatch","userActions","fetch","method","headers","body","JSON","stringify","refreshToken","then","response","ok","Error","json","catch","error","console","updateToken","accessToken","success","getUser","email","user","name","patchUser","token","initOrders","postingLogin","failedLogin","successLogin","postingLogout","failedLogout","successLogout","postingToken","failedToken","successToken","getUserInfo","failedUserInfo","successUserInfo","patchUserInfo","failedPatchInfo","successPatchInfo","failedRegistry","postingRegistry","successRegistry","failedRestoreEmail","postingPasswordRequest","successRestoreEmail","message","failedNewPassword","postingNewPassword","successNewPassword","LoginPage","useState","password","setData","handleChangeData","e","currentTarget","value","trim","wrapForm","form","onSubmit","preventDefault","placeholder","onChange","icon","size","state","from","MenuProfile","sidebar","onClick","Profile","store","getUserInfoSuccess","isEditing","setIsEditing","useEffect","handleChange","profile","wrapEditForm","patchInfoUser","buttons","profileButton","buttonPrimary","ForgotPassword","setEmail","resetPasswordSuccess","restoreEmail","Register","registerSuccess","registry","ResetPassword","sendNewPassword","EWsStatus","TypeElement","ItemTypes","NotFound404","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_INGREDIENT_IN_ORDER","DELETE_INGREDIENT_IN_ORDER","DELETE_INGREDIENTS","ADD_INGREDIENT_BUN_IN_ORDER","UPDATE_LOCATION_INGREDIENT_IN_ORDER","OPEN_MODAL_DETAILS","CLOSE_MODAL_DETAILS","getIngredients","ingredientAction","getIngredientsFailed","gettingIngredients","getIngredientsSuccess","ingredients","IngredientInList","_id","ingredient","ingredientsInOrder","filter","card","image","price","countIngredientInOrder","item","length","location","handleOpenModal","id","openModalDetails","useDrag","Ingredient","collect","monitor","opacity","isDragging","drag","modal","ref","style","count","src","alt","BurgerIngredients","sections","bunRef","useRef","sauceRef","mainRef","scrollBar","current","setCurrent","handleClickTab","scrollToTop","scrollTop","offsetTop","handleScroll","scroll","getScrollTop","bottomPointOfScroll","saucesPoint","mainPoint","root","tabs","map","tab","i","active","renderTrackVertical","props","scrollTrackVertical","renderThumbVertical","scrollThumbVertical","thumbSize","contentInScroll","onScroll","autoHeight","autoHeightMax","OrderDetails","number","order","orderNumber","ModalOverlay","stopPropagation","target","onOverlayClick","children","modalRoot","document","getElementById","Modal","container","useMemo","createElement","insertAdjacentElement","removeChild","pressEsc","useCallback","key","onClose","addEventListener","removeEventListener","ReactDOM","createPortal","close","head","GET_ORDER","POST_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_FAILED","getOrderNumber","ids","orderActions","wsActions","postingOrderNumber","getOrderNumberFailed","getOrderNumberSuccess","IngredientInOrder","index","moveInOrder","position","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","bunTopBottom","Top","Bottom","isLocked","text","thumbnail","fillings","handleClose","actionDeleteIngredientInOrder","Loader","wrap","BurgerConstructor","orderSuccess","orderRequest","isLoggedIn","authorized","history","useHistory","showModal","setshowModal","sum","reduce","isBunInOrder","some","ingredientIds","moveIngredient","idIngredient","uuidv4","itemId","actionUpdatedIngredient","autoHeightMin","totalPrice","getOrder","push","disabled","emptyCart","HomePage","ingredientsSuccess","ingredientsRequest","ingredientsFailed","DndProvider","backend","HTML5Backend","sortByDate","a","b","Date","createdAt","getTime","returnStatus","status","Done","Created","Pending","Cancel","getDate","date","dateRaw","rawDay","result","today","diffTime","Math","abs","differentDate","ceil","getDayPhrase","getHours","slice","getMinutes","getTimezoneOffset","toString","replace","getOrderCost","getSelectIngredients","selectIngredients","indexOf","forEach","idIngredientsOrder","getIngredient","getAccessToken","localStorage","getItem","parse","FeedItem","allIngredients","orders","isOrder","getIngredientPicture","iconWrap","countIngredientPicture","iconBlackout","numberOfHiddenPictures","iconBlackWrap","sort","itemFeed","feed","itemTop","colorBlue","colorRed","itemBottom","icons","itemPrice","WS_CONNECTION_START","WS_CONNECTION_START_ORDERS","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_SEND_MESSAGE","wsInit","wsInitOrders","wsSendMessage","onOpen","onError","onMessage","wsConnectionClosed","Feed","messages","ws","isConnect","wsConnected","wsOrders","wsOrdersTotal","total","wsOrdersTotalToday","totalToday","getOrdersReady","ordersReady","isOrdersReady","getOrdersInProgress","isOrdersInProgress","sectionFeed","feedMain","feedStatistics","box","numbersOrders","numberShadows","ProfileOrders","listOrders","IngredientDetails","isPage","useParams","calories","proteins","fat","carbohydrates","imageCard","description","ProtectedRoute","rest","render","PublicRoute","isPathFromForgotPassword","isPathResetPassword","FeedDetails","variant","orderDetail","selectIngredient","parseInt","quantityInOrder","feedDetails","feedIngredients","feedIngredient","nameIngredient","SwitchRoute","handleCloseModal","event","goBack","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","orderFailed","loginRequest","loginFailed","loginSuccess","logoutRequest","logoutFailed","logoutSuccess","tokenRequest","tokenFailed","tokenSuccess","getUserInfoRequest","getUserInfoFailed","patchUserInfoRequest","patchUserInfoFailed","patchUserInfoSuccess","registerRequest","registerFailed","resetPasswordRequest","resetPasswordFailed","undefined","openIngredientId","rootReducer","combineReducers","action","array","findIndex","update","$splice","tokens","setItem","clear","enhancer","window","compose","applyMiddleware","next","decoder","jwtDecode","expiredToken","exp","now","setTimeout","getState","socket","WebSocket","onopen","payload","onerror","onmessage","parsedData","restParsedData","wsGetMessage","onclose","send","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.0646e781.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"MenuProfile_sidebar__1QI7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ModalOverlay_root__2Xt1g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loader_wrap__1KBmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFeed\":\"FeedItem_itemFeed__1zsNy\",\"icons\":\"FeedItem_icons__Qi-Y3\",\"iconWrap\":\"FeedItem_iconWrap__2b32Q\",\"iconBlackout\":\"FeedItem_iconBlackout__3JQD-\",\"icon\":\"FeedItem_icon__3KRn4\",\"iconBlackWrap\":\"FeedItem_iconBlackWrap__8qjMZ\",\"itemTop\":\"FeedItem_itemTop__EzxSj\",\"itemBottom\":\"FeedItem_itemBottom__1b921\",\"itemPrice\":\"FeedItem_itemPrice__11o1x\",\"numberOfHiddenPictures\":\"FeedItem_numberOfHiddenPictures__3TApQ\",\"colorBlue\":\"FeedItem_colorBlue__h3uq7\",\"colorRed\":\"FeedItem_colorRed__39RoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapForm\":\"pages_wrapForm__1HuDN\",\"form\":\"pages_form__GMR7J\",\"wrapEditForm\":\"pages_wrapEditForm__24NCV\",\"buttons\":\"pages_buttons__2KrYN\",\"buttonPrimary\":\"pages_buttonPrimary__2nG6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionFeed\":\"feed_sectionFeed__2ocY1\",\"feedMain\":\"feed_feedMain__19kmj\",\"feed\":\"feed_feed__3dy9h\",\"feedStatistics\":\"feed_feedStatistics__Finpn\",\"colorBlue\":\"feed_colorBlue__2SaU2\",\"numbersOrders\":\"feed_numbersOrders__1Rm3-\",\"box\":\"feed_box__3mMMS\",\"numberShadows\":\"feed_numberShadows__6yu_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3VjSC\",\"orders\":\"profile_orders__1iOLw\",\"listOrders\":\"profile_listOrders__nRWDD\",\"wrapEditForm\":\"profile_wrapEditForm__1vmFp\",\"form\":\"profile_form__1Yt6A\",\"buttons\":\"profile_buttons__2c5d8\",\"profileButton\":\"profile_profileButton__2icBb\",\"buttonPrimary\":\"profile_buttonPrimary__2-8oo\"};","import { BurgerIcon, ListIcon, ProfileIcon, Logo }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, NavLink, useLocation } from 'react-router-dom';\r\nimport cn from \"classnames\";\r\nimport s from './Header.module.css';\r\n\r\nexport const Header = () => {    \r\n  const { pathname } = useLocation();\r\n    return (\r\n        <header className={cn(s.header, 'm-10')}>\r\n          <nav className={cn(s.navigation, 'mt-4 mb-4')}>\r\n            <ul className={s.content}>\r\n              <li className={s.links}>\r\n                <NavLink to=\"/\" className='pl-5 pr-5 mr-2' \r\n                isActive={() => pathname.includes('ingredients') || pathname === '/'}\r\n                exact={true}\r\n                >\r\n                  <BurgerIcon type=\"secondary\"/>\r\n                  <span className=\"ml-2 text text_type_main-default\">Конструктор</span>\r\n                </NavLink>\r\n\r\n                <NavLink to=\"/feed\" className='pl-5 pr-5'>\r\n                  <ListIcon type=\"secondary\" />\r\n                  <span className=\"ml-2 text text_type_main-default\">Лента заказов</span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className={s.logo}>\r\n                <Link to='/'><Logo /></Link>\r\n              </li>\r\n\r\n              <li className={s.login}>\r\n                <NavLink to=\"/profile/\" exact={true} className='pl-5 pr-5'>\r\n                  <ProfileIcon type=\"secondary\" />\r\n                  <span className=\"ml-2 text text_type_main-default\">Личный кабинет</span>\r\n                </NavLink> \r\n              </li>\r\n            </ul>\r\n          </nav>  \r\n        </header>\r\n      );\r\n  }","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch } from './types';\r\nimport { TAppState, TAppAction } from '../services/reducers';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nexport type TThunkDispatch = ThunkDispatch<{}, {}, TAppAction>;\r\n\r\nexport const useAppThunkDispatch = () => useDispatch<TThunkDispatch>();\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<TAppState> = useSelector;","export const BASE_URL = 'https://norma.nomoreparties.space/api/';\r\nexport const WS_URL = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const WS_USER_URL = 'wss://norma.nomoreparties.space/orders';","import { BASE_URL } from '../../utils/constants';\r\nimport { IRegistryUser, IToken, AppDispatch, IPasswordData } from '../../utils/types';\r\nimport * as userActions from './actionsUser';\r\n\r\nexport const INIT_USER = 'INIT_USER';\r\nexport const AUTHORIZED = 'AUTHORIZED';\r\nexport const GET_USER = 'GET_USER';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const PATCH_USER = 'PATCH_USER';\r\nexport const INIT_ORDERS = 'INIT_ORDERS';\r\n\r\nexport const POST_LOGIN_USER = 'POST_LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\n\r\nexport const POST_LOGOUT = 'POST_LOGOUT';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED = 'LOGOUT_FAILED';\r\n\r\nexport const POST_UPDATE_TOKEN = 'POST_UPDATE_TOKEN';\r\nexport const UPDATE_TOKEN_SUCCESS = 'UPDATE_TOKEN_SUCCESS';\r\nexport const UPDATE_TOKEN_FAILED = 'UPDATE_TOKEN_FAILED';\r\n\r\nexport const GET_INFO_USER = 'GET_INFO_USER';\r\nexport const GET_INFO_SUCCESS = 'GET_INFO_SUCCESS';\r\nexport const GET_INFO_FAILED = 'GET_INFO_FAILED';\r\n\r\nexport const PATCH_INFO_USER = 'PATCH_INFO_USER';\r\nexport const PATCH_INFO_FAILED = 'PATCH_INFO_FAILED';\r\nexport const PATCH_INFO_SUCCESS = 'PATCH_INFO_SUCCESS';\r\n\r\nexport const POST_REGISTRY_USER = 'POST_REGISTRY_USER';\r\nexport const RESPONSE_SUCCESS_REGISTRY = 'RESPONSE_SUCCESS_REGISTRY';\r\nexport const RESPONSE_FAILED_REGISTRY = 'RESPONSE_FAILED_REGISTRY';\r\n\r\nexport const POST_PASSWORD_REQUEST = 'POST_PASSWORD_REQUEST';\r\nexport const RESPONSE_FAILED_PASSWORD = 'RESPONSE_FAILED_PASSWORD';\r\nexport const RESPONSE_SUCCESS_PASSWORD = 'RESPONSE_SUCCESS_PASSWORD';\r\n\r\nexport const POST_NEW_PASSWORD_REQUEST = 'POST_NEW_PASSWORD_REQUEST';\r\nexport const RESPONSE_FAILED_NEW_PASSWORD = 'RESPONSE_FAILED_NEW_PASSWORD';\r\nexport const RESPONSE_SUCCESS_NEW_PASSWORD = 'RESPONSE_SUCCESS_NEW_PASSWORD';\r\n\r\nexport const login = (data: IRegistryUser) => {\r\n  return (dispatch: AppDispatch) => { \r\n      dispatch(userActions.postingLogin());\r\n  \r\n      fetch(`${BASE_URL}auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedLogin());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successLogin(\r\n          response.success, \r\n          response.accessToken, \r\n          response.refreshToken, \r\n          { email: response.user.email, name: response.user.name }\r\n        ));  \r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedLogin());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport const logout = (data: IToken) => {\r\n  return (dispatch: AppDispatch) => { \r\n      dispatch(userActions.postingLogout());\r\n  \r\n      fetch(`${BASE_URL}auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \"token\": data.refreshToken})\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedLogout());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        dispatch(userActions.successLogout());\r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedLogout());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function updateToken(data: IToken) {\r\n  return function(dispatch: AppDispatch) { \r\n      dispatch(userActions.postingToken());\r\n  \r\n    return fetch(`${BASE_URL}auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': data.accessToken ?? \"\",\r\n        },\r\n        body: JSON.stringify({ \"token\": data.refreshToken})\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedToken());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successToken(response.success, response.accessToken, response.refreshToken));\r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedToken());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function getUser(data: IToken) {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(userActions.getUserInfo());\r\n  \r\n      fetch(`${BASE_URL}auth/user`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': data.accessToken ?? \"\",\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n            dispatch(userActions.failedUserInfo());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successUserInfo(response.success, { email: response.user.email, name: response.user.name }));  \r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedUserInfo());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function patchUser(data: IRegistryUser, token: string) {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(userActions.patchUserInfo());\r\n  \r\n      fetch(`${BASE_URL}auth/user`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedPatchInfo());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successPatchInfo(response.success, { email: response.user.email, name: response.user.name }));  \r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedPatchInfo());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function registry(data: IRegistryUser) {\r\n  return function(dispatch: AppDispatch) { \r\n    dispatch(userActions.postingRegistry());\r\n\r\n    fetch(`${BASE_URL}auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        dispatch(userActions.failedRegistry());\r\n        throw new Error('Network response was not OK');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      dispatch(userActions.successRegistry(response.success, response.accessToken, response.refreshToken));  \r\n    })\r\n    .catch(error => {\r\n      dispatch(userActions.failedRegistry());\r\n      console.error('There has been a problem with fetch operation:', error);\r\n    });\r\n  }\r\n}\r\n\r\nexport function restoreEmail(email: string) {\r\n  return function(dispatch: AppDispatch) { \r\n    dispatch(userActions.postingPasswordRequest());\r\n\r\n    fetch(`${BASE_URL}password-reset`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"email\": email})\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        dispatch(userActions.failedRestoreEmail());\r\n        throw new Error('Network response was not OK');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      dispatch(userActions.successRestoreEmail(response.message, response.success)); \r\n    })\r\n    .catch(error => {\r\n      dispatch(userActions.failedRestoreEmail());\r\n      console.error('There has been a problem with fetch operation:', error);\r\n    });\r\n  }\r\n}\r\n\r\nexport function sendNewPassword(data: IPasswordData) {\r\nreturn function(dispatch: AppDispatch) { \r\n  dispatch(userActions.postingNewPassword());\r\n\r\n  fetch(`${BASE_URL}password-reset/reset`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      dispatch(userActions.failedNewPassword());\r\n      throw new Error('Network response was not OK');\r\n    }\r\n    return response.json();\r\n  })\r\n  .then(response => {\r\n    dispatch(userActions.successNewPassword(response.message, response.success));  \r\n  })\r\n  .catch(error => {\r\n    dispatch(userActions.failedNewPassword());\r\n    console.error('There has been a problem with fetch operation:', error);\r\n  });\r\n}\r\n}","import {\r\n  INIT_USER,\r\n  AUTHORIZED, \r\n  LOGIN,\r\n  LOGOUT,\r\n  GET_USER,\r\n  PATCH_USER,\r\n  INIT_ORDERS,\r\n\r\n  POST_LOGIN_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILED,\r\n\r\n  POST_LOGOUT,\r\n  LOGOUT_FAILED,\r\n  LOGOUT_SUCCESS,\r\n\r\n  POST_UPDATE_TOKEN,\r\n  UPDATE_TOKEN_SUCCESS,\r\n  UPDATE_TOKEN_FAILED,\r\n\r\n  GET_INFO_USER,\r\n  GET_INFO_SUCCESS,\r\n  GET_INFO_FAILED,\r\n\r\n  PATCH_INFO_USER,\r\n  PATCH_INFO_SUCCESS,\r\n  PATCH_INFO_FAILED,\r\n  \r\n  POST_REGISTRY_USER, RESPONSE_SUCCESS_REGISTRY, RESPONSE_FAILED_REGISTRY,\r\n  POST_PASSWORD_REQUEST, RESPONSE_FAILED_PASSWORD, RESPONSE_SUCCESS_PASSWORD,\r\n  POST_NEW_PASSWORD_REQUEST, RESPONSE_FAILED_NEW_PASSWORD, RESPONSE_SUCCESS_NEW_PASSWORD\r\n} from './User';\r\nimport { IRegistryUser, IUser } from '../../utils/types';\r\n\r\nexport const initUser = () => ({ type: INIT_USER }) as const;\r\nexport const authUser = () => ({ type: AUTHORIZED }) as const;\r\nexport const loginUser = (user: IRegistryUser) => ({ type: LOGIN, user }) as const;\r\nexport const logoutUser = () => ({ type: LOGOUT }) as const;\r\nexport const getInfoUser = () => ({ type: GET_USER }) as const;\r\nexport const initOrders = () => ({ type: INIT_ORDERS }) as const;\r\nexport const patchInfoUser = (user: IRegistryUser) => ({ type: PATCH_USER, user }) as const;\r\n\r\n//Login\r\nexport const postingLogin = () => ({ type: POST_LOGIN_USER }) as const;\r\nexport const failedLogin = () => ({ type: LOGIN_USER_FAILED}) as const;\r\nexport const successLogin = (success: boolean, accessToken: string, refreshToken: string, user: IUser) => \r\n({ type: LOGIN_USER_SUCCESS, success, accessToken, refreshToken, user }) as const;\r\n\r\n//Logout\r\nexport const postingLogout = () => ({ type: POST_LOGOUT }) as const;\r\nexport const failedLogout = () => ({ type: LOGOUT_FAILED }) as const;\r\nexport const successLogout = () => ({ type: LOGOUT_SUCCESS }) as const;\r\n\r\n//Update token\r\nexport const postingToken = () => ({ type: POST_UPDATE_TOKEN }) as const;\r\nexport const failedToken = () => ({ type: UPDATE_TOKEN_FAILED }) as const;\r\nexport const successToken = (success: boolean, accessToken: string, refreshToken: string) => \r\n({ type: UPDATE_TOKEN_SUCCESS, success, accessToken, refreshToken }) as const;\r\n\r\n//Get Info about user\r\nexport const getUserInfo = () => ({ type: GET_INFO_USER }) as const;\r\nexport const failedUserInfo = () => ({ type: GET_INFO_FAILED }) as const;\r\nexport const successUserInfo = (success: boolean, user: IUser) => \r\n({ type: GET_INFO_SUCCESS, success, user }) as const;\r\n\r\n//Patch Info User\r\nexport const patchUserInfo = () => ({ type: PATCH_INFO_USER }) as const;\r\nexport const failedPatchInfo = () => ({ type: PATCH_INFO_FAILED }) as const;\r\nexport const successPatchInfo = (success: boolean, user: IUser) =>\r\n({ type: PATCH_INFO_SUCCESS, success, user }) as const;\r\n\r\n// Registry User\r\nexport const failedRegistry = () => ({ type: RESPONSE_FAILED_REGISTRY }) as const;\r\nexport const postingRegistry = () => ({ type: POST_REGISTRY_USER }) as const;\r\nexport const successRegistry = (success: boolean, accessToken: string, refreshToken: string) => \r\n({ type: RESPONSE_SUCCESS_REGISTRY, success, accessToken, refreshToken }) as const;\r\n\r\n//Restore Email\r\nexport const failedRestoreEmail = () => ({ type: RESPONSE_FAILED_PASSWORD }) as const;\r\nexport const postingPasswordRequest = () => ({ type: POST_PASSWORD_REQUEST }) as const;\r\nexport const successRestoreEmail = (message: string, success: boolean) => \r\n({ type: RESPONSE_SUCCESS_PASSWORD, message, success }) as const;\r\n\r\n// Send New Password\r\nexport const failedNewPassword = () => ({ type: RESPONSE_FAILED_NEW_PASSWORD }) as const;\r\nexport const postingNewPassword = () => ({ type: POST_NEW_PASSWORD_REQUEST }) as const;\r\nexport const successNewPassword = (message: string, success: boolean) => \r\n({ type: RESPONSE_SUCCESS_NEW_PASSWORD, message, success }) as const;","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { loginUser } from '../services/actions/actionsUser';\r\nimport { useAppDispatch } from '../utils/hooks';\r\nimport { ILocationFrom } from '../utils/types';\r\nimport s from './pages.module.css';\r\n\r\nexport function LoginPage() {\r\n  const [data, setData] = useState({ email: '', password: '' });\r\n  const dispatch = useAppDispatch();\r\n  const { pathname } = useLocation<ILocationFrom>();\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(data));\r\n  }\r\n  const handleChangeData = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value.trim() });\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Вход</h2>\r\n          <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'E-mail'}\r\n              onChange={handleChangeData}\r\n              value={data.email}\r\n              name={'email'}\r\n            />\r\n            <Input\r\n              type={'password'}\r\n              placeholder={'Пароль'}\r\n              onChange={handleChangeData}\r\n              icon={'ShowIcon'}\r\n              value={data.password}\r\n              name={'password'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\" name='buttonLogin'>\r\n              Войти\r\n            </Button>\r\n          </form>\r\n          <p className='text text_type_main-default pb-4'>\r\n            <span className='text_color_inactive'>Вы — новый пользователь?</span> \r\n            <Link \r\n              to={{ \r\n                pathname: '/register', \r\n                state: { from: pathname }\r\n              }}\r\n            > Зарегистрироваться</Link>\r\n          </p>\r\n          <p className='text text_type_main-default'>\r\n            <span className='text_color_inactive'>Забыли пароль?</span>\r\n            <Link \r\n              to={{ \r\n                pathname: '/forgot-password', \r\n                state: { from: pathname }\r\n              }}\r\n            > Восстановить пароль</Link>\r\n          </p>\r\n  </div>\r\n)\r\n}","import { FC, MouseEvent } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { logoutUser } from '../../services/actions/actionsUser';\r\nimport { useAppDispatch } from '../../utils/hooks';\r\n\r\nimport s from './MenuProfile.module.css';\r\n\r\nexport const MenuProfile: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const handleClickLogout = (e: MouseEvent<HTMLElement>) => {\r\n        e.preventDefault();\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n    return (\r\n    <div className={s.sidebar}>\r\n        <nav className='text text_type_main-medium mb-20'>\r\n            <NavLink to=\"/profile/\" exact={true} >Профиль</NavLink>\r\n            <NavLink to=\"/profile/orders\" exact={true} >История заказов</NavLink>\r\n            <Link to=\"/\" onClick={handleClickLogout}>\r\n                Выход\r\n            </Link>\r\n        </nav>\r\n        <p className='text text_type_main-default text_color_inactive'>В этом разделе вы можете<br />изменить свои персональные данные</p>\r\n    </div>\r\n    )\r\n}","import { useState, ChangeEvent, useEffect } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getInfoUser, patchInfoUser } from '../../services/actions/actionsUser';\r\nimport { IRegistryUser } from '../../utils/types';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\n\r\nimport s from './profile.module.css';\r\nimport { MenuProfile } from '../../components/MenuProfile';\r\n\r\nexport function Profile() {\r\n  const success = useAppSelector(store=> store.user.getUserInfoSuccess);\r\n  const user = useAppSelector(store => store.user.user) as IRegistryUser;\r\n\r\n  const [data, setData] = useState<IRegistryUser>({ email: '', name: '', password: '' });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getInfoUser());\r\n  }, [dispatch]);\r\n  \r\n  useEffect(() => {\r\n    if (success) {\r\n        setData(state => ({ ...state, email: user.email, name: user.name }));\r\n    }\r\n  }, [success, user.email, user.name]);\r\n\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setIsEditing(false);\r\n    dispatch(patchInfoUser(data));\r\n  }\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setIsEditing(true);\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value });\r\n  }\r\n  const handleDiscardСhanges = () => {\r\n    setData({...data, email: user.email, name: user.name });\r\n    setIsEditing(false);\r\n  }\r\n\r\n return (\r\n    <div className={`${s.profile} pl-5 pr-5`}>\r\n        <MenuProfile />\r\n        <div className={s.wrapEditForm}>\r\n            <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        onChange={handleChange}\r\n                        value={data.name ?? \"\"}\r\n                        name={'name'}\r\n                        icon={'EditIcon'}\r\n                    />\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'Логин'}\r\n                        onChange={handleChange}\r\n                        value={data.email}\r\n                        name={'email'}\r\n                        icon={'EditIcon'}\r\n                    />\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Пароль'}\r\n                        onChange={handleChange}\r\n                        value={data.password}\r\n                        name={'password'}\r\n                        icon={'EditIcon'}\r\n                    />\r\n                    {isEditing && \r\n                        <div className={s.buttons}>\r\n                            <div className={s.profileButton}>\r\n                                <button \r\n                                    className={s.buttonPrimary}\r\n                                    type=\"button\" \r\n                                    onClick={handleDiscardСhanges}>\r\n                                    Отмена\r\n                                </button> \r\n                            </div>\r\n                            <div className={s.profileButton}>\r\n                                <Button type=\"primary\" size=\"medium\">\r\n                                    Сохранить\r\n                                </Button>\r\n                            </div>\r\n                        </div> \r\n                    }\r\n            </form>\r\n        </div>\r\n    </div>  \r\n)}","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { restoreEmail } from '../services/actions/User';\r\nimport { useAppThunkDispatch, useAppSelector } from '../utils/hooks';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const success = useAppSelector(store => store.user.resetPasswordSuccess);\r\n  const dispatch = useAppThunkDispatch();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const handleSendEmail = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(restoreEmail(email));\r\n  }\r\n  const handleChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n\r\n  if (success) {\r\n    return <Redirect\r\n    to={{\r\n      pathname: '/reset-password',\r\n      state: { from: pathname }\r\n    }}\r\n  />\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Восстановление пароля</h2>\r\n      <form className={`${s.form} mb-20`} onSubmit={handleSendEmail}>\r\n        <Input\r\n            type={'email'}\r\n            placeholder={'Укажите e-mail'}\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n            name={'email'}\r\n          />\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Восстановить\r\n          </Button>\r\n      </form>\r\n      <p className='text text_type_main-default'>\r\n        <span className='text_color_inactive'>Вспомнили пароль?</span> \r\n        <Link to='/login'> Войти</Link>\r\n      </p>\r\n  </div>\r\n)\r\n}","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { registry } from '../services/actions/User';\r\nimport { useAppThunkDispatch, useAppSelector } from '../utils/hooks';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function Register() {\r\n  const [data, setData] = useState({ name: '', email: '', password: '' });\r\n  const success = useAppSelector(store => store.user.registerSuccess);\r\n  const dispatch = useAppThunkDispatch();\r\n\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(registry(data));\r\n  }\r\n  const handleChangeData = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value });\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Регистрация</h2>\r\n     {success ? \r\n     \"Успешно зарегистрирован\"\r\n     :\r\n     (<>\r\n        <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n            <Input\r\n              type={'text'}\r\n              placeholder={'Имя'}\r\n              onChange={handleChangeData}\r\n              value={data.name}\r\n              name={'name'}\r\n            />\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'E-mail'}\r\n              onChange={handleChangeData}\r\n              value={data.email}\r\n              name={'email'}\r\n            />\r\n            <Input\r\n              type={'password'}\r\n              placeholder={'Пароль'}\r\n              onChange={handleChangeData}\r\n              icon={'ShowIcon'}\r\n              value={data.password}\r\n              name={'password'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Зарегистрироваться\r\n            </Button>\r\n        </form>\r\n        <p className='text text_type_main-default'>\r\n            <span className='text_color_inactive'>Уже зарегистрированы?</span> \r\n            <Link to='/login'> Войти</Link>\r\n        </p>\r\n     </>)\r\n     }\r\n  </div>\r\n)\r\n}","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppThunkDispatch } from '../utils/hooks';\r\nimport { sendNewPassword } from '../services/actions/User';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function ResetPassword() {\r\n  const [data, setData] = useState({ password: '', token: '' });\r\n\r\n  const dispatch = useAppThunkDispatch();\r\n\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(sendNewPassword(data));\r\n  }\r\n  const handleChangeData = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value });\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Восстановление пароля</h2>\r\n     <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n      <Input\r\n          type={'password'}\r\n          placeholder={'Введите новый пароль'}\r\n          onChange={handleChangeData}\r\n          icon={'ShowIcon'}\r\n          value={data.password}\r\n          name={'password'}\r\n        />\r\n      <Input\r\n          type={'text'}\r\n          placeholder={'Введите код из письма'}\r\n          onChange={handleChangeData}\r\n          value={data.token}\r\n          name={'token'}\r\n        />\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Сохранить\r\n        </Button>\r\n     </form>\r\n     <p className='text text_type_main-default'>\r\n      <span className='text_color_inactive'>Вспомнили пароль?</span> \r\n      <Link to='/login'> Войти</Link>\r\n     </p>\r\n  </div>\r\n)\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport const NotFound404 = () => {\r\nreturn (\r\n    <>\r\n        <h1>404 - Страница не найдена!</h1>\r\n        <Link className=\"text text_type_main-default text_color_inactive\" to=\"/\">Конструктор &gt;&gt;</Link>\r\n    </>\r\n)\r\n}","import { store } from '../services/store';\r\n\r\nexport type TActionsKeys<T> = {\r\n [K in keyof T] : T[K] extends Function ? K : never\r\n}[keyof T];\r\nexport type TActionsCreators<T> = Pick<T, TActionsKeys<T>>;\r\nexport type TActions<TCreators> = {\r\n  [K in keyof TCreators] : TCreators[K] extends (...args: any) => infer U ? U : never\r\n}[keyof TCreators];\r\n\r\nexport interface IDragItem {\r\n  _id: string;\r\n}\r\n\r\nexport interface IDropItem {\r\n  index: number\r\n}\r\n\r\nexport interface IIngredient {\r\n  _id: string;\r\n  id?: string;\r\n  name: string;\r\n  type: string;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n  price: number;\r\n  image: string;\r\n  image_mobile: string;\r\n  image_large: string;\r\n}\r\n\r\nexport interface IDataOfIngredient {\r\n  position?: string;\r\n  index?: number;\r\n  moveInOrder?: (dragIndex: number, hoverIndex: number) => void;\r\n  _id: string;\r\n}\r\n\r\nexport interface IPasswordData {\r\n  password: string;\r\n  token: string;\r\n}\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IRegistryUser {\r\n  name?: string;\r\n  password: string;\r\n  email: string;\r\n}\r\n\r\nexport interface ILocationProp<T> {\r\n  pathname: string;\r\n  search: string;\r\n  state: T;\r\n  hash: string;\r\n  key?: string | undefined;\r\n}\r\n\r\nexport interface ILocationProps {\r\n  modal?: ILocationProp<unknown>;\r\n  feed?: ILocationProp<unknown>;\r\n  order?: ILocationProp<unknown>;\r\n}\r\n\r\nexport interface ILocation {\r\n  hash: string;\r\n  key: string;\r\n  pathname?: string;\r\n  search: string;\r\n  state?: ILocationFrom;\r\n}\r\n\r\nexport interface ILocationFrom {\r\n  from: string;\r\n  modal?: string\r\n}\r\n\r\nexport interface IToken {\r\n  accessToken?: string;\r\n  refreshToken?: string;\r\n}\r\n\r\nexport interface IWsMessage {\r\n  orders: IWsMessageOrder[];\r\n  total?: number;\r\n  totalToday?: number;\r\n  token?: string;\r\n}\r\n\r\nexport interface IWsMessageOrder {\r\n  _id: string;\r\n  ingredients: string[];\r\n  status: string;\r\n  name: string;\r\n  createdAt: string;\r\n  updatedAt: Date;\r\n  number: number;\r\n}\r\n\r\nexport enum EWsStatus {\r\n  Done = 'done',\r\n  Pending = 'pending',\r\n  Created = 'created',\r\n  Cancel = 'cancel'\r\n}\r\n\r\nexport type JWTDeCode = {\r\n  iat: number,\r\n  exp: number\r\n}\r\n\r\nexport enum TypeElement {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ItemTypes  {\r\n  IngredientInOrder = 'ingredientInOrder',\r\n  Ingredient = 'ingredient'\r\n}\r\n\r\nexport type AppDispatch = typeof store.dispatch;","import { BASE_URL } from '../../utils/constants';\r\nimport { AppDispatch } from '../../utils/types';\r\nimport * as ingredientAction from './actionsIngredient';\r\n\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT_IN_ORDER = 'ADD_INGREDIENT_IN_ORDER';\r\nexport const DELETE_INGREDIENT_IN_ORDER = 'DELETE_INGREDIENT_IN_ORDER';\r\nexport const DELETE_INGREDIENTS = 'DELETE_INGREDIENTS';\r\nexport const ADD_INGREDIENT_BUN_IN_ORDER = 'ADD_INGREDIENT_BUN_IN_ORDER';\r\nexport const UPDATE_LOCATION_INGREDIENT_IN_ORDER = 'UPDATE_LOCATION_INGREDIENT_IN_ORDER';\r\n\r\nexport const OPEN_MODAL_DETAILS = 'OPEN_MODAL_DETAILS';\r\nexport const CLOSE_MODAL_DETAILS = 'CLOSE_MODAL_DETAILS';\r\n\r\nexport function getIngredients() {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(ingredientAction.gettingIngredients());\r\n  \r\n      fetch(`${BASE_URL}ingredients`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(ingredientAction.getIngredientsFailed());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(ingredientAction.getIngredientsSuccess(response.success, response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(ingredientAction.getIngredientsFailed());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n","import {\r\n    GET_INGREDIENTS_FAILED,\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    UPDATE_LOCATION_INGREDIENT_IN_ORDER,\r\n    DELETE_INGREDIENT_IN_ORDER,\r\n    DELETE_INGREDIENTS,\r\n    OPEN_MODAL_DETAILS,\r\n    CLOSE_MODAL_DETAILS\r\n  } from './index';\r\nimport { IIngredient } from '../../utils/types';\r\n\r\nexport const deleteIngredients = () => ({ type: DELETE_INGREDIENTS }) as const;  \r\nexport const actionDeleteIngredientInOrder = (_id: string) => \r\n({ type: DELETE_INGREDIENT_IN_ORDER, _id }) as const;\r\nexport const getIngredientsFailed = () => ({ type: GET_INGREDIENTS_FAILED }) as const;\r\nexport const gettingIngredients = () => ({ type: GET_INGREDIENTS_REQUEST }) as const;\r\nexport const getIngredientsSuccess = (success: boolean, ingredients: IIngredient[]) => \r\n  ({ type: GET_INGREDIENTS_SUCCESS, success, ingredients }) as const;\r\n\r\nexport const actionUpdatedIngredient = (dragIndex: number, hoverIndex: number) => \r\n({ type: UPDATE_LOCATION_INGREDIENT_IN_ORDER, dragIndex, hoverIndex }) as const;\r\n\r\nexport const gettingIngredientBun = (type: \"ADD_INGREDIENT_BUN_IN_ORDER\" | \"ADD_INGREDIENT_IN_ORDER\", id: string, _id?: string) => \r\n({ type: type, id, _id }) as const;\r\n\r\nexport const openModalDetails = (_id: string) => ({ type: OPEN_MODAL_DETAILS, _id }) as const;\r\nexport const closeModalDetails = () => ({ type: CLOSE_MODAL_DETAILS }) as const;","import { FC } from 'react';\r\nimport { ItemTypes, IIngredient } from '../../utils/types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Counter, CurrencyIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { openModalDetails } from '../../services/actions/actionsIngredient';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './IngredientInList.module.css';\r\n\r\ninterface IIngredientInListProps {\r\n    _id: string;\r\n}\r\n\r\nexport const IngredientInList: FC<IIngredientInListProps> = ({ _id }) => {\r\n    const { ingredients, ingredientsInOrder } = useAppSelector(store => store.ingredient);\r\n    const { name, image, price } = ingredients.filter((card: IIngredient) => card._id === _id)[0];\r\n    const dispatch = useAppDispatch();\r\n    const countIngredientInOrder = ingredientsInOrder.filter(item => item._id === _id).length;\r\n    const location = useLocation();\r\n\r\n    const handleOpenModal = (id: string) => {\r\n        dispatch(openModalDetails(id));\r\n    };\r\n \r\n    const [{ opacity }, drag] = useDrag({\r\n        type: ItemTypes.Ingredient,\r\n        item: { _id },\r\n        collect: monitor => ({\r\n            opacity: monitor.isDragging() ? 0.5 : 1\r\n        })\r\n    });\r\n\r\n      return (    \r\n            <Link id={`link_${_id}`} onClick={() => handleOpenModal(_id)} key={_id}\r\n                  to={{\r\n                        pathname: `/ingredients/${_id}`,\r\n                        state: { modal: location }\r\n                  }}\r\n            >\r\n                <div ref={drag} style={{ opacity }} id={`card_${_id}`} className={cn(s.card, \"pr-4 pl-4\")}>\r\n                    {countIngredientInOrder > 0 && <Counter count={countIngredientInOrder} size='default' />}\r\n                    <img src={image} alt={name} />\r\n                    <span className={`${s.price} mt-1 mb-1 text text_type_digits-default`}>{price} <CurrencyIcon type=\"primary\" /></span>\r\n                    <span className={`${s.name} text text_type_main-default`}>{name}</span>\r\n                </div>\r\n            </Link>    \r\n      )\r\n}","import { FC, useRef, useState } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { IngredientInList } from '../IngredientInList';\r\nimport { useAppSelector } from '../../utils/hooks';\r\nimport { IIngredient } from '../../utils/types';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './BurgerIngredients.module.css';\r\n\r\nconst THUMB_HEIGHT = 230;\r\n\r\nexport const BurgerIngredients: FC = () => {\r\n    const { ingredients } = useAppSelector(store => store.ingredient);\r\n\r\n    const sections = ['bun', 'sauce', 'main'];\r\n    const bunRef = useRef<HTMLDivElement>(null);\r\n    const sauceRef = useRef<HTMLDivElement>(null);\r\n    const mainRef = useRef<HTMLDivElement>(null);\r\n    const scrollBar = useRef<Scrollbars>(null);\r\n\r\n    const [current, setCurrent] = useState('bun');\r\n\r\n    const handleClickTab = (value: string) => {\r\n        setCurrent(value);\r\n        if (value === 'bun'){\r\n            scrollBar.current?.scrollToTop();\r\n        }\r\n        if (value === 'sauce' && sauceRef && sauceRef.current){\r\n            scrollBar.current?.scrollTop(sauceRef.current.offsetTop);\r\n        }\r\n        if (value === 'main' && mainRef && mainRef.current){\r\n            scrollBar.current?.scrollTop(mainRef.current.offsetTop);\r\n        }\r\n     }\r\n\r\n     const handleScroll = () => {\r\n        const scroll = scrollBar?.current?.getScrollTop() || 0;\r\n        const bottomPointOfScroll = scroll ? scroll + THUMB_HEIGHT : 0;\r\n        const saucesPoint = sauceRef?.current?.offsetTop || 0;\r\n        const mainPoint = mainRef?.current?.offsetTop || 0;\r\n        \r\n        if (bottomPointOfScroll >= mainPoint) {\r\n            setCurrent('main');\r\n        } else if (bottomPointOfScroll >= saucesPoint) {\r\n            setCurrent('sauce');\r\n        } else {\r\n            setCurrent('bun');\r\n        }\r\n     }\r\n\r\n    const tabs = () => {\r\n        return (  \r\n          <>\r\n            <nav className={cn(s.tabs, 'mb-10')}>\r\n                {sections.map((tab, i) => (\r\n                    <Tab key={`tab${i}${tab}`} value={tab} active={current === tab} onClick={handleClickTab}>\r\n                        {tab === 'bun' ? 'Булки' : tab === 'sauce' ? 'Соусы' : 'Начинки'}\r\n                    </Tab>\r\n                    )\r\n                )}\r\n            </nav>\r\n\r\n            <Scrollbars \r\n                renderTrackVertical={({...props}) => <div {...props} className={s.scrollTrackVertical}/>} \r\n                renderThumbVertical={({...props}) => <div {...props} className={s.scrollThumbVertical}/>}\r\n                ref={scrollBar} \r\n                thumbSize={THUMB_HEIGHT}\r\n                className={s.contentInScroll}\r\n                onScroll={handleScroll}\r\n                autoHeight={true}\r\n                autoHeightMax={716}\r\n            >\r\n               {sections.map((tab, i) => (\r\n                    <div key={`${i}${tab}`} ref={tab === 'bun' ? bunRef : tab === 'sauce' ? sauceRef : mainRef}>\r\n                        <h2>{tab === 'bun' ? 'Булки' : tab === 'sauce' ? 'Соусы' : 'Начинки'}</h2>\r\n                        <section className={`${s.ingredients} mt-6 mb-10 mr-4 ml-4`}>\r\n                            {\r\n                              ingredients\r\n                              .filter(({ type }: IIngredient) => type === tab)\r\n                              .map(({ _id }: IIngredient) => \r\n                                  <IngredientInList key={_id} _id={_id} />\r\n                              )\r\n                            }\r\n                        </section>\r\n                    </div>\r\n               ))\r\n               }\r\n             </Scrollbars>\r\n          </>\r\n        )\r\n    }\r\n   \r\n    return (\r\n            <section className={`${s.root} mb-10`}>\r\n                <h1 className='text text_type_main-large mb-5'>Соберите бургер</h1>\r\n                {tabs()}\r\n            </section>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/check.2022ce2b.svg\";","\r\nimport { FC } from 'react';\r\nimport { useAppSelector } from '../../utils/hooks';\r\nimport ImageCheckPath from '../../images/check.svg';\r\n\r\nimport s from './OrderDetails.module.css';\r\n\r\nexport const OrderDetails: FC = () => {\r\n    const number = useAppSelector(store => store.order.number);\r\n    return (\r\n        <section className={`${s.content} mt-20 mb-20`}>\r\n            <span className={`${s.orderNumber} text text_type_digits-large`}>{number}</span>\r\n            <span className='mt-8 mb-15 text text_type_main-medium'>идентификатор заказа</span>\r\n            <ImageCheckPath />\r\n            <span className='mt-15 mb-2 text text_type_main-default'>Ваш заказ начали готовить</span>\r\n            <span className='text text_type_main-default text_color_inactive'>Дождитесь готовности на орбитальной станции</span>\r\n        </section>\r\n    )\r\n}","import { ReactNode, useRef } from 'react';\r\nimport s from './ModalOverlay.module.css';\r\n\r\nexport interface IModalOverlay {\r\n    onOverlayClick: (event?: React.MouseEvent) => void;\r\n    children?: ReactNode;\r\n}\r\n\r\nexport const ModalOverlay = (props: IModalOverlay) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const onOverlayClick = (e: React.MouseEvent | undefined) => {\r\n        e?.stopPropagation();\r\n        if (ref.current?.className === (e?.target as HTMLDivElement).className) {\r\n            props.onOverlayClick();\r\n        }\r\n      }\r\n\r\n    return(\r\n        <div ref={ref} onClick={onOverlayClick} className={s.root}>{props.children}</div>\r\n    );\r\n}","import { useMemo, useEffect, useCallback, ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ModalOverlay } from '../ModalOverlay';\r\nimport { CloseIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.getElementById(\"modals\") || document.body;\r\n\r\nexport interface IModal {\r\n  header?: string;\r\n  onClose: (event?: React.MouseEvent) => void;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const Modal = (props: IModal) => {\r\n    const container = useMemo(() => document.createElement(\"div\"), []);\r\n\r\n    useEffect(() => {\r\n      modalRoot.insertAdjacentElement('beforeend', container);\r\n        return () => {\r\n          modalRoot.removeChild(container);\r\n        };\r\n      }, [container]);\r\n    \r\n    const pressEsc = useCallback((e: KeyboardEvent) => {\r\n        if(e.key === \"Escape\") {\r\n          props?.onClose();\r\n        }\r\n      }, [props]\r\n    )\r\n\r\n    useEffect(() => {\r\n      document.addEventListener(\"keydown\", pressEsc);\r\n    \r\n        return () => {\r\n          document.removeEventListener(\"keydown\", pressEsc);\r\n        };\r\n    }, [pressEsc]);\r\n\r\n    return ReactDOM.createPortal(\r\n      <>\r\n        <ModalOverlay onOverlayClick={props.onClose}>\r\n          <div className={`${s.modal} pt-10 pl-10 pb-15 pr-10`}>\r\n            <div id=\"closeBtn\" className={`${s.close} pt-15 pr-10`} onClick={props.onClose}>\r\n              <CloseIcon type=\"primary\" />\r\n            </div>\r\n            <h1 className={`${s.head} text text_type_main-large`}>{props.header}</h1>\r\n            {props.children}\r\n          </div>\r\n        </ModalOverlay>\r\n      </>\r\n      , container);\r\n}","import { BASE_URL } from '../../utils/constants';\r\nimport * as orderActions from './actionsOrderDetails';\r\nimport { deleteIngredients } from './actionsIngredient';\r\nimport { AppDispatch } from '../../utils/types';\r\n\r\nexport const GET_ORDER = 'GET_ORDER';\r\nexport const POST_ORDER_NUMBER_REQUEST = 'POST_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_SUCCESS = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const GET_ORDER_NUMBER_FAILED = 'GET_ORDER_NUMBER_FAILED';\r\n\r\nexport function getOrderNumber(ids: Array<string>, token: string) {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(orderActions.postingOrderNumber());\r\n  \r\n      fetch(`${BASE_URL}orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token,\r\n        },\r\n        body: JSON.stringify({\"ingredients\": ids})\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(orderActions.getOrderNumberFailed());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(orderActions.getOrderNumberSuccess(response.success, response.order.number));\r\n        dispatch(deleteIngredients()); \r\n      })\r\n      .catch(error => {\r\n        dispatch(orderActions.getOrderNumberFailed());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}","import { GET_ORDER, POST_ORDER_NUMBER_REQUEST, GET_ORDER_NUMBER_SUCCESS, GET_ORDER_NUMBER_FAILED } from './OrderDetails';\r\n\r\nexport const getOrder = (ingredientIds: Array<string>) => ({ type: GET_ORDER, ingredientIds }) as const;\r\n\r\nexport const postingOrderNumber = () => ({ type: POST_ORDER_NUMBER_REQUEST }) as const;\r\nexport const getOrderNumberFailed = () => ({ type: GET_ORDER_NUMBER_FAILED }) as const;\r\nexport const getOrderNumberSuccess = (success: boolean, value: string) => \r\n  ({ type: GET_ORDER_NUMBER_SUCCESS, success, value }) as const;","import { Middleware } from \"redux\";\r\nimport { TAppState, TAppAction } from '../services/reducers';\r\nimport { AppDispatch } from '../utils/types';\r\nimport { TWsActions, WS_SEND_MESSAGE } from '../services/actions/wsActionTypes';\r\nimport { wsGetMessage } from '../services/actions/actionsWs';\r\nimport { WS_URL, WS_USER_URL } from '../utils/constants';\r\n\r\nexport const socketMiddleware = (wsActions: TWsActions): Middleware<{}, TAppState> => {\r\n    return (store => {\r\n      let socket: WebSocket | null = null;\r\n\r\n    return (next: AppDispatch) => (action: TAppAction) => {\r\n      const { wsInit, wsInitOrders, onOpen, onClose, onError } = wsActions;\r\n      const { dispatch, getState } = store;\r\n      const { authorized, accessToken } = getState().user;\r\n \r\n      if (action.type === wsInit) {\r\n        socket = new WebSocket(WS_URL);\r\n      }\r\n\r\n      if (action.type === wsInitOrders && authorized && accessToken) {\r\n        socket = new WebSocket(`${WS_USER_URL}?token=${accessToken.replace(\"Bearer\",\"\").trim()}`);\r\n      }\r\n      \r\n      if (socket) {\r\n                // функция, которая вызывается при открытии сокета\r\n        socket.onopen = event => {\r\n            dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n                // функция, которая вызывается при ошибке соединения\r\n        socket.onerror = event => {\r\n            dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n                // функция, которая вызывается при получения события от сервера\r\n        socket.onmessage = event => {\r\n            const { data } = event;\r\n\r\n            const parsedData = JSON.parse(data);\r\n            const { success, ...restParsedData } = parsedData;\r\n          \r\n            dispatch(wsGetMessage(success, restParsedData));\r\n        };\r\n                // функция, которая вызывается при закрытии соединения\r\n        socket.onclose = event => {\r\n            dispatch({ type: onClose, payload: event });\r\n        };\r\n\r\n        if (action.type === WS_SEND_MESSAGE && accessToken) {\r\n            action.message.token = accessToken.replace(\"Bearer\",\"\").trim();\r\n            const message = action.message;\r\n            socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n\r\n      next(action);\r\n    };\r\n    });\r\n};","import { FC, useRef } from 'react';\r\nimport s from './IngredientInOrder.module.css';\r\nimport { ConstructorElement, DragIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IDataOfIngredient, ItemTypes, TypeElement, IIngredient, IDropItem } from '../../utils/types';\r\nimport { actionDeleteIngredientInOrder } from '../../services/actions/actionsIngredient';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\r\nimport { XYCoord } from 'dnd-core';\r\nimport cn from \"classnames\";\r\n\r\nexport const IngredientInOrder: FC<IDataOfIngredient> = ({ index, moveInOrder, position, _id }) => {\r\n  const { ingredientsInOrder } = useAppSelector(store => store.ingredient);\r\n  const { type, name, price, image, id } = ingredientsInOrder.filter((card: IIngredient) => card._id === _id)[0];\r\n\r\n    const dispatch = useAppDispatch();\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    \r\n    const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.IngredientInOrder,\r\n    collect: monitor => ({\r\n      handlerId: monitor.getHandlerId(),\r\n    }),\r\n    hover(item: IDropItem, monitor: DropTargetMonitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index ?? 0;\r\n\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset()\r\n\r\n      // Get pixels to the top\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top\r\n\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      // Time to actually perform the action\r\n      moveInOrder?.(dragIndex, hoverIndex);\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex\r\n    },\r\n  });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n      type: ItemTypes.IngredientInOrder,\r\n      item: () => {\r\n        return { id, index }\r\n      },\r\n      collect: monitor => ({\r\n        isDragging: monitor.isDragging(),\r\n      }),\r\n    });\r\n\r\n    drag(drop(ref));\r\n    \r\n    const onDelete = () => dispatch(actionDeleteIngredientInOrder(_id));\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n    return type === 'bun' ? \r\n        (\r\n          <div className={s.bunTopBottom}>\r\n            <ConstructorElement\r\n              type={position === 'top' ? TypeElement.Top : TypeElement.Bottom}\r\n              isLocked\r\n              text={`${name} (${position === 'top' ? 'верх' : 'низ'})`}\r\n              price={price}\r\n              thumbnail={image}\r\n            />\r\n          </div>\r\n        )\r\n        :\r\n        (\r\n          <div ref={ref} style={{ opacity }} className={cn(s.fillings, 'mb-4 mr-4 ml-4')} data-handler-id={handlerId}>\r\n              <DragIcon type=\"primary\" />\r\n              <ConstructorElement\r\n              isLocked={type === 'bun'}\r\n              text={name}\r\n              price={price}\r\n              thumbnail={image}\r\n              handleClose={onDelete}\r\n              />\r\n          </div>\r\n        )\r\n}","export default __webpack_public_path__ + \"static/media/load.33c066c2.svg\";","import { FC } from 'react';\r\nimport ImageLoad from '../../images/load.svg';\r\n\r\nimport s from './Loader.module.css';\r\n\r\nexport const Loader: FC = () => {\r\n    return (\r\n        <div className={s.wrap}>\r\n            Загрузка <ImageLoad />\r\n        </div>\r\n    )\r\n}","import { FC, useState, useCallback, useMemo } from 'react';\r\nimport { Button, CurrencyIcon, BurgerIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ItemTypes, IIngredient, IDragItem } from '../../utils/types';\r\nimport { OrderDetails } from '../OrderDetails';\r\nimport { Modal } from '../../components/Modal';\r\nimport { ADD_INGREDIENT_IN_ORDER,\r\n         ADD_INGREDIENT_BUN_IN_ORDER } from '../../services/actions';\r\nimport { actionUpdatedIngredient, gettingIngredientBun } from '../../services/actions/actionsIngredient';\r\nimport { getOrder } from '../../services/actions/actionsOrderDetails';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport { IngredientInOrder } from '../IngredientInOrder';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Loader } from '../Loader';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './BurgerConstructor.module.css';\r\n\r\nexport const BurgerConstructor: FC = () => {\r\n  const { \r\n    ingredients, \r\n    ingredientsInOrder\r\n  } = useAppSelector(store => store.ingredient);\r\n  const { orderSuccess, orderRequest } = useAppSelector(store => store.order);\r\n  const isLoggedIn = useAppSelector(store => store.user.authorized);\r\n  const history = useHistory();\r\n\r\n  const [showModal, setshowModal] = useState(false);\r\n  const sum = useMemo(\r\n    () => (ingredientsInOrder as IIngredient[]).reduce((sum, { type, price }) => type === 'bun' ? sum + price * 2 : sum + price, 0),\r\n    [ingredientsInOrder]\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isBunInOrder = useMemo(\r\n    () => ingredientsInOrder.some(({ type }) => type === 'bun'),\r\n    [ingredientsInOrder]\r\n  );\r\n\r\n  const ingredientIds = ingredientsInOrder.map(card => card?._id);\r\n\r\n  const moveIngredient = useCallback((item: IDragItem) => {\r\n    const ingredient = ingredients.filter((card: IIngredient) => card._id === item._id)[0];\r\n    const idIngredient = uuidv4();\r\n    dispatch(gettingIngredientBun(ingredient.type === 'bun' ? ADD_INGREDIENT_BUN_IN_ORDER : ADD_INGREDIENT_IN_ORDER, idIngredient, item._id));\r\n  },\r\n  [dispatch, ingredients],\r\n  );\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.Ingredient,\r\n    drop(itemId: IDragItem) {\r\n      moveIngredient(itemId);\r\n    },\r\n  });\r\n\r\n  const moveInOrder = useCallback((dragIndex: number, hoverIndex: number) => {\r\n        dispatch(actionUpdatedIngredient(dragIndex, hoverIndex));\r\n    }, [dispatch],\r\n  );\r\n\r\n const handleOpenModal = () => {\r\n  if (isLoggedIn) {\r\n    setshowModal(true);\r\n    dispatch(getOrder(ingredientIds));\r\n  } else {\r\n    history.push(\"/login\");\r\n  }\r\n};\r\nconst handleCloseModal = () => setshowModal(false);\r\n\r\nconst bunTopBottom = (position: string) => {\r\n  return ingredientsInOrder\r\n  .filter((ingredient: IIngredient) => ingredient.type === 'bun')\r\n  .map((ingredient: IIngredient, i) => \r\n     <IngredientInOrder position={position} key={uuidv4()} index={i} _id={ingredient._id}/>\r\n  )\r\n}\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <Modal onClose={handleCloseModal}>\r\n          {orderRequest && <Loader />}\r\n          {orderSuccess && <OrderDetails />} \r\n        </Modal>\r\n      ) : null\r\n      }\r\n\r\n      <section className={cn(s.root, 'pt-25')}>\r\n        <div ref={drop} className={cn(s.content, 'mb-10')} id=\"constructor\">\r\n          {ingredientsInOrder.length > 0 \r\n          ?\r\n          (<>\r\n              {bunTopBottom('top')}\r\n              <Scrollbars \r\n              renderTrackVertical={({...props}) =><div {...props} className={s.scrollTrackVertical}/>} \r\n              renderThumbVertical={({...props}) =><div {...props} className={s.scrollThumbVertical}/>}\r\n              autoHeight={true}\r\n              autoHeightMin={72}\r\n              autoHeightMax={425}\r\n              >\r\n                {ingredientsInOrder\r\n                .map((ingredient: IIngredient, i:number) => ingredient.type !== 'bun' &&\r\n                  <IngredientInOrder key={ingredient.id} moveInOrder={moveInOrder} index={i} _id={ingredient._id} />\r\n                )}\r\n              </Scrollbars>\r\n              {bunTopBottom('bottom')}\r\n\r\n              <div className={`${s.totalPrice} mb-10`}>\r\n                {\r\n                sum > 0 && <span className={`${s.price} text text_type_digits-medium`}>{sum} <CurrencyIcon type=\"primary\" /></span>\r\n                }\r\n                <Button \r\n                  type=\"primary\" \r\n                  size=\"medium\" \r\n                  onClick={handleOpenModal}\r\n                  disabled={!isBunInOrder}\r\n                  name=\"buttonOrder\"\r\n                >\r\n                  Оформить заказ\r\n                </Button>\r\n              </div>\r\n          </>)\r\n          :\r\n              <div className={s.emptyCart}><BurgerIcon type=\"primary\" /></div>\r\n          }\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n  \r\n//export default BurgerConstructor;","\r\nimport { useEffect } from 'react';\r\nimport { BurgerIngredients } from '../components/BurgerIngredients';\r\nimport { BurgerConstructor }from '../components/BurgerConstructor';\r\nimport { Loader } from '../components/Loader';\r\nimport { useAppThunkDispatch, useAppSelector } from '../utils/hooks';\r\nimport { getIngredients } from '../services/actions';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider } from 'react-dnd';\r\n\r\nimport \"../styles/globals.css\";\r\nimport \"../styles/fonts.css\";\r\n\r\n\r\nexport const HomePage = () => {\r\nconst { ingredients, \r\n        ingredientsSuccess, \r\n        ingredientsRequest, \r\n        ingredientsFailed } = useAppSelector(store => store.ingredient);\r\nconst dispatch = useAppThunkDispatch();\r\n\r\nuseEffect(() => {\r\n  dispatch(getIngredients())\r\n}, [dispatch]);\r\n\r\n    return (\r\n          <main>\r\n            {ingredientsFailed && <p>Произошла ошибка при получении данных</p>}\r\n            {ingredientsRequest && <Loader />}\r\n            \r\n            {ingredientsSuccess && ingredients.length > 0 &&\r\n            <DndProvider backend={HTML5Backend}>\r\n              <BurgerIngredients />\r\n              <BurgerConstructor />\r\n            </DndProvider>\r\n            }\r\n          </main>\r\n      );\r\n}","import { EWsStatus, IWsMessageOrder, IIngredient } from './types';\r\n\r\nexport const sortByDate = (a: IWsMessageOrder, b: IWsMessageOrder) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n\r\nexport const returnStatus = (status: string): string => {\r\n    switch (status) {\r\n        case EWsStatus.Done:\r\n            return \"Выполнен\";\r\n        case EWsStatus.Created:\r\n            return \"Создан\";\r\n        case EWsStatus.Pending:\r\n            return \"В работе\"; \r\n        case EWsStatus.Cancel:\r\n            return \"Отменен\";        \r\n        default: \r\n            return \"Не известен\";\r\n      }\r\n}\r\n\r\nexport const getDayPhrase = (rawDay: Date): string => {\r\n    const today = new Date();\r\n    const diffTime = Math.abs(today.getTime() - rawDay.getTime());\r\n    const differentDate = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    let result: string;\r\n\r\n    switch (true) {\r\n      case differentDate === 0:\r\n        result =\"Сегодня \";\r\n        break;\r\n      case differentDate === 1:\r\n        result =\"Вчера \";\r\n        break;\r\n      case differentDate > 1 && differentDate <= 4:\r\n        result = `${differentDate} дня назад `;\r\n        break; \r\n      default:\r\n        result = `${differentDate} дней назад `;\r\n    }\r\n\r\n    return result;\r\n  } \r\n\r\nexport const getDate = (date: string): string => {\r\n      const dateRaw = new Date(date);\r\n\r\n      const resultDay = getDayPhrase(dateRaw);\r\n      const resultTime = `${('0'+ dateRaw.getHours()).slice(-2)}:${('0'+ dateRaw.getMinutes()).slice(-2)}`;\r\n      const resultTimeZoneOffsetInHours = \" i-GMT\"+ (dateRaw.getTimezoneOffset() / 60).toString().replace(\"-\",\"+\");\r\n\r\n      return resultDay + resultTime + resultTimeZoneOffsetInHours;\r\n}\r\n\r\nexport const getOrderCost = (ingredients: IIngredient[], ids: string[]): number => {\r\n  const selectIngredients: IIngredient[] = getSelectIngredients(ingredients, ids);\r\n  return selectIngredients.reduce((sum, { price, type }) => type === 'bun' ? sum + price * 2 : sum + price, 0)\r\n}\r\n\r\nexport const getIngredient = (ingredients: IIngredient[], idIngredientsOrder: string): IIngredient => {\r\n  return ingredients.filter(item => item._id === idIngredientsOrder)[0];\r\n}\r\n\r\nexport const getSelectIngredients = (ingredients: IIngredient[], ids: string[]): IIngredient[] => {\r\n  const selectIngredients: IIngredient[] = [];\r\n  ids\r\n      .filter((item, index) => ids.indexOf(item) === index)\r\n      .forEach((id: string | null) => id !== null ? selectIngredients.push(getIngredient(ingredients, id)) : \"\");\r\n  return selectIngredients; \r\n}\r\n\r\nexport const getAccessToken = (): string => {\r\n  const tokens = localStorage.getItem('tokens') ?? null;\r\n  let accessToken = null;\r\n  if (tokens !== null) {\r\n    const token = JSON.parse(localStorage.getItem(\"tokens\") ?? \"null\");\r\n    accessToken = token.accessToken;\r\n  }\r\n  return accessToken;\r\n}\r\n\r\n\r\n\r\n","import { FC } from 'react';\r\nimport { IWsMessageOrder, IIngredient, EWsStatus } from '../../utils/types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { CurrencyIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getDate, sortByDate, getOrderCost, getSelectIngredients, returnStatus } from '../../utils/utils';\r\n\r\nimport s from './FeedItem.module.css';\r\nimport cn from \"classnames\";\r\n\r\ninterface IFeedItemProps {\r\n    isOrder?: boolean;\r\n    orders: IWsMessageOrder[];\r\n    ingredients: IIngredient[]\r\n}\r\n\r\nexport const FeedItem: FC<IFeedItemProps> = ({ ingredients: allIngredients, orders, isOrder = false }) => {\r\n  const location = useLocation();\r\n  const getIngredientPicture = (ingredients: IIngredient[], ids: string[]) => {\r\n  const selectIngredients: IIngredient[] = getSelectIngredients(ingredients, ids);\r\n \r\n    return selectIngredients.map((ingredient, index) => (\r\n            <div key={ingredient._id} className={cn(s.iconWrap, countIngredientPicture(ids) > 6 && index === 5 && s.iconBlackout)}>\r\n                {countIngredientPicture(ids) > 6 && index === 5 && \r\n                  <div className={s.numberOfHiddenPictures}>+{countIngredientPicture(ids) - 6}</div>\r\n                }\r\n                <div className={s.iconBlackWrap}>\r\n                    <img className={s.icon} src={ingredient.image} alt={ingredient.name} />\r\n                </div>\r\n            </div>\r\n        )\r\n    )              \r\n  }\r\n\r\n  const countIngredientPicture = (ingredients: string[]) => {\r\n    return ingredients\r\n              .filter((item, index) => ingredients.indexOf(item) === index)\r\n              .length\r\n  }\r\n  \r\n    return (\r\n       <>  \r\n      {orders && orders.length > 0 && allIngredients && allIngredients.length > 0 && \r\n            orders\r\n            .sort(sortByDate)\r\n            .map(({ number, name, status, createdAt, ingredients }, index) => (\r\n            <div className={s.itemFeed} key={`${index}${number}`}> \r\n              <Link to={{\r\n                        pathname: isOrder ? `/profile/orders/${number}` : `/feed/${number}`,\r\n                        state: isOrder ? { order: location } : { feed: location }\r\n                    }}>\r\n                <div className={s.itemTop}>\r\n                  <span className='text text_type_digits-default'>#{number}</span>\r\n                  <span className='text text_type_main-default text_color_inactive'>{getDate(createdAt)}</span>\r\n                </div>\r\n\r\n                <div>\r\n                  <h2 className='text text_type_main-medium'>{name}</h2>\r\n                </div>\r\n                \r\n                {isOrder && \r\n                  <p className={cn(status === EWsStatus.Done && s.colorBlue, status === EWsStatus.Cancel && s.colorRed, `text text_type_main-default mt-2`)}>{returnStatus(status)}</p>\r\n                }\r\n\r\n                <div className={s.itemBottom}>\r\n                  <div className={s.icons}>\r\n                    {getIngredientPicture(allIngredients, ingredients)}\r\n                  </div>  \r\n                  <span className={`${s.itemPrice} text text_type_digits-default`}>\r\n                    {getOrderCost(allIngredients, ingredients)}&nbsp;\r\n                    <CurrencyIcon type=\"primary\" /></span>\r\n                </div>\r\n              </Link>\r\n            </div>  \r\n            ))\r\n          }\r\n        </>  \r\n    )     \r\n}","\r\nexport const WS_CONNECTION_START = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_START_ORDERS = 'WS_CONNECTION_START_ORDERS';\r\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE = 'WS_SEND_MESSAGE';\r\n\r\nexport type TWsActions = {\r\n    wsInit: string,\r\n    wsSendMessage: string,\r\n    onOpen: string,\r\n    onClose: string,\r\n    onError: string,\r\n    onMessage: string,\r\n    wsInitOrders: string,\r\n};\r\n\r\nexport const wsActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    wsInitOrders: WS_CONNECTION_START_ORDERS,\r\n    wsSendMessage: WS_SEND_MESSAGE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    onMessage: WS_GET_MESSAGE\r\n};","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    WS_SEND_MESSAGE,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_START_ORDERS,\r\n  } from './wsActionTypes';\r\n  import { IWsMessage } from '../../utils/types';\r\n  \r\n  export const wsInit = () => ({ type: WS_CONNECTION_START }) as const;\r\n  export const wsInitOrders = () => ({ type: WS_CONNECTION_START_ORDERS }) as const;\r\n  export const wsConnectionSuccess = () => ({ type: WS_CONNECTION_SUCCESS }) as const;\r\n  export const wsConnectionError = () => ({ type: WS_CONNECTION_ERROR }) as const;\r\n  export const wsConnectionClosed = () => ({ type: WS_CONNECTION_CLOSED }) as const;\r\n  export const wsGetMessage = (success: boolean, message: IWsMessage) => ({ type: WS_GET_MESSAGE, message, success }) as const;\r\n  export const wsSendMessage = (message: IWsMessage) => ({ type: WS_SEND_MESSAGE, message }) as const;\r\n","import { useEffect } from 'react';\r\nimport { FeedItem } from '../../components/FeedItem';\r\nimport { useAppThunkDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { wsInit, wsConnectionClosed } from '../../services/actions/actionsWs';\r\nimport { IWsMessageOrder, EWsStatus } from '../../utils/types';\r\nimport { getIngredients } from '../../services/actions';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './feed.module.css';\r\n\r\nexport const Feed = () => {\r\n  const { ingredients } = useAppSelector(store => store.ingredient);\r\n  const dispatch = useAppThunkDispatch();\r\n  const messages = useAppSelector(store => store.ws.messages || []);\r\n  const isConnect = useAppSelector(store => store.ws.wsConnected);\r\n  let wsOrders: IWsMessageOrder[] = [];\r\n\r\n  const wsOrdersTotal = messages[0]?.total ?? 0;\r\n  const wsOrdersTotalToday = messages[0]?.totalToday ?? 0;\r\n\r\n  useEffect(\r\n    () => {\r\n        dispatch(getIngredients());\r\n        dispatch(wsInit());\r\n        \r\n        return () => {\r\n            dispatch(wsConnectionClosed());\r\n        };\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  if (messages && messages.length > 0) {\r\n    messages.forEach(({ orders }) => {\r\n       wsOrders = orders.map(item => item)\r\n    })\r\n  }\r\n  \r\n const getOrdersReady = () => {\r\n    const ordersReady = wsOrders.filter(({ status }) => status === EWsStatus.Done);\r\n    return (\r\n      ordersReady.length > 0 ?\r\n        ordersReady.map(({ number }, index) => \r\n          <span className={cn(s.colorBlue, \"text text_type_digits-default pb-2\")} key={`${number}_0${index}`}>{number}</span>\r\n        )\r\n        :\r\n          null\r\n    )\r\n }\r\nconst isOrdersReady = !!getOrdersReady(); \r\n\r\nconst getOrdersInProgress = () => {\r\n  const ordersReady = wsOrders.filter(({ status }) => status === EWsStatus.Pending);\r\n  return (\r\n      ordersReady.length > 0 ?\r\n        ordersReady.map(({ number }, index) => \r\n            <span className=\"text text_type_digits-default pb-2\" key={`${number}_0${index}`}>{number}</span>\r\n        )\r\n        :\r\n        null\r\n  )\r\n}\r\nconst isOrdersInProgress = !!getOrdersInProgress();\r\n\r\n return (\r\n  <section className={s.sectionFeed}>\r\n    <h1 className='text text_type_main-large mb-5'>Лента заказов</h1>\r\n        <div className={s.feedMain}>\r\n          {isConnect ? (\r\n            <>\r\n              <div className={cn(s.feed, 'scroll')}>\r\n                  {ingredients && ingredients.length > 0 &&\r\n                      <FeedItem orders={wsOrders} ingredients={ingredients}/>\r\n                  }\r\n              </div>\r\n              <div className={`${s.feedStatistics} ml-15`}>\r\n                {isOrdersReady &&\r\n                  <div className='mb-15 flexBox'>\r\n                      <div className={s.box}>\r\n                        <p className='text text_type_main-medium pb-6'>Готовы:</p>\r\n                        <div className={s.numbersOrders}>\r\n                          {getOrdersReady()}\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                }  \r\n                {isOrdersInProgress && \r\n                  <div className='mb-15 flexBox'>\r\n                    <div className={s.box}>\r\n                        <p className='text text_type_main-medium pb-6'>В работе:</p>\r\n                        <div className={s.numbersOrders}>\r\n                          {getOrdersInProgress()}\r\n                        </div>\r\n                      </div>\r\n                  </div>    \r\n                }\r\n                <p className='text text_type_main-medium'>Выполнено за все время:</p>\r\n                <p className={`${s.numberShadows} text text_type_digits-large pb-15`}>{wsOrdersTotal}</p>\r\n                <p className='text text_type_main-medium'>Выполнено за сегодня:</p>\r\n                <p className={`${s.numberShadows} text text_type_digits-large`}>{wsOrdersTotalToday}</p>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>Произошла ошибка при получении данных</p>\r\n          )} \r\n        </div>\r\n  </section>\r\n\r\n\r\n)\r\n}","import { useEffect } from 'react';\r\nimport { MenuProfile } from \"../../components/MenuProfile\";\r\nimport { FeedItem } from '../../components/FeedItem';\r\nimport { useAppThunkDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { IWsMessageOrder } from '../../utils/types';\r\nimport { wsConnectionClosed } from '../../services/actions/actionsWs';\r\nimport { getIngredients } from '../../services/actions';\r\nimport { initOrders } from '../../services/actions/actionsUser';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './profile.module.css';\r\n\r\nexport const ProfileOrders = () => {\r\n  const { ingredients } = useAppSelector(store => store.ingredient);\r\n  const dispatch = useAppThunkDispatch();\r\n  const messages = useAppSelector(store => store.ws.messages || []);\r\n  let wsOrders: IWsMessageOrder[] = [];\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(initOrders());\r\n      dispatch(getIngredients());\r\n      \r\n      return () => {\r\n          dispatch(wsConnectionClosed());\r\n      };\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  if (messages && messages.length > 0) {\r\n      wsOrders = messages[0].orders.map(item => item)\r\n  }\r\n\r\n return (\r\n  <div className={`${s.orders} pl-5 pr-5`}>\r\n      <MenuProfile />\r\n      <div className={cn(s.listOrders, 'scroll')}>\r\n          {ingredients && ingredients.length > 0 &&\r\n              <FeedItem \r\n                isOrder\r\n                orders={wsOrders} \r\n                ingredients={ingredients}\r\n              />\r\n          }\r\n      </div>\r\n  </div>\r\n)}","import { FC, useEffect } from 'react';\r\nimport { useAppThunkDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { IIngredient } from '../../utils/types';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getIngredients } from '../../services/actions';\r\n\r\nimport s from './IngredientDetails.module.css';\r\n\r\ninterface IIngredientDetailsProps {\r\n    type?: string;\r\n}\r\n\r\nexport const IngredientDetails: FC<IIngredientDetailsProps> = ({ type }) => {\r\n    const { ingredients, ingredientsSuccess } = useAppSelector(store => store.ingredient);\r\n    const isPage = type === \"page\";\r\n    const { id } = useParams<{ id?: string }>();\r\n    const dispatch = useAppThunkDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isPage) {\r\n           dispatch(getIngredients())\r\n        }\r\n      }, [isPage, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            {ingredientsSuccess && ingredients.length > 0 &&\r\n             ingredients\r\n             .filter(({ _id }: IIngredient) => _id === id)\r\n             .map(({ image, name, calories, proteins, fat, carbohydrates, _id }: IIngredient) =>\r\n               <section key={_id} className={s.content}>\r\n                    <img className={`${s.imageCard} pr-5 pl-5`} src={image} alt={name}/>\r\n                    <p className='text text_type_main-medium mt-4 mt-8'>{name}</p>\r\n                    <div className={`${s.description} mt-8`}>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Калории,ккал</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{calories}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Белки, г</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{proteins}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Жиры, г</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{fat}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Углеводы, г</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{carbohydrates}</span>\r\n                            </div>\r\n                        </div>\r\n                </section>\r\n             )   \r\n            }\r\n        </>\r\n    )\r\n}        ","import { ReactNode } from 'react';\r\nimport { useAppSelector } from '../utils/hooks';\r\nimport { Route, Redirect, useLocation, RouteProps } from 'react-router-dom';\r\nimport { ILocationFrom } from '../utils/types';\r\n\r\ninterface IProtectedRouteProps extends RouteProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ProtectedRoute = ({ children, ...rest }: IProtectedRouteProps) => {\r\n  const isLoggedIn = useAppSelector(store => store.user.authorized);\r\n  const { pathname, state } = useLocation<ILocationFrom>();\r\n\r\n  return (\r\n      <Route \r\n        {...rest}\r\n        render={() => {\r\n          return isLoggedIn ? (\r\n            children\r\n          ) : (\r\n            <Redirect to={\r\n              {pathname: state?.from || '/login',\r\n              state: {from: pathname }\r\n            }}/>\r\n          )\r\n         }\r\n      }\r\n      />\r\n    );\r\n} ","import { ReactNode } from 'react';\r\nimport { useAppSelector } from '../utils/hooks';\r\nimport { Route, Redirect, useLocation, RouteProps } from 'react-router-dom';\r\nimport { ILocationFrom } from '../utils/types';\r\n\r\ninterface IPublicRouteProps extends RouteProps {\r\n  children: ReactNode;\r\n  type: string;\r\n}\r\n\r\nexport const PublicRoute = ({ children, type, ...rest }: IPublicRouteProps) => {\r\n  const isLoggedIn = useAppSelector(store => store.user.authorized);\r\n  const { pathname, state } = useLocation<ILocationFrom>();\r\n\r\n const isPathFromForgotPassword = state?.from === '/forgot-password';\r\n const isPathResetPassword = pathname.includes(\"reset-password\");\r\n\r\n if (!isPathFromForgotPassword && isPathResetPassword) {\r\n    return <Redirect\r\n      to={{\r\n        pathname: '/forgot-password'\r\n      }}\r\n    />\r\n  }\r\n\r\n  return (\r\n    <Route \r\n      {...rest}\r\n      render={() => \r\n        type === \"guest\" && !isLoggedIn ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n                to={{\r\n                  pathname: state?.from || \"/\",\r\n                  state: { from: pathname }\r\n                }}\r\n            />\r\n        )\r\n        }\r\n    />\r\n    );\r\n} ","import { FC, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CurrencyIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useAppSelector, useAppThunkDispatch } from '../../utils/hooks';\r\nimport { IWsMessageOrder, IIngredient } from '../../utils/types';\r\nimport { wsInit, wsConnectionClosed } from '../../services/actions/actionsWs';\r\nimport { getIngredients } from '../../services/actions';\r\nimport { returnStatus, getDate, getOrderCost, getSelectIngredients } from '../../utils/utils';\r\nimport { initOrders } from '../../services/actions/actionsUser';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './FeedDetails.module.css';\r\n\r\ninterface IFeedDetailsProps {\r\n    type?: string;\r\n    variant?: string;\r\n}\r\n\r\nexport const FeedDetails: FC<IFeedDetailsProps> = ({ type, variant }) => {\r\n    const ingredients = useAppSelector(store => store.ingredient.ingredients);\r\n    const { id } = useParams<{ id: string }>();\r\n    const dispatch = useAppThunkDispatch();\r\n    const messages = useAppSelector(store => store.ws.messages || []);\r\n    \r\n    const isPage = type === \"page\";\r\n    let orderDetail: IWsMessageOrder[] = [];\r\n    let selectIngredient: IIngredient[] = [];\r\n    \r\n    messages.forEach(({ orders }) => {\r\n        orderDetail = orders.filter(item => item.number === parseInt(id, 10))\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n         if (isPage) {\r\n           dispatch(getIngredients());\r\n           if (variant === \"orders\") {\r\n                dispatch(initOrders());\r\n           } else {\r\n                dispatch(wsInit());\r\n           }    \r\n         }\r\n\r\n         return () => {\r\n            if (isPage) {\r\n              dispatch(wsConnectionClosed());\r\n            }\r\n          };\r\n        },\r\n     [isPage, dispatch, variant]\r\n    );\r\n\r\n    if (orderDetail && orderDetail.length > 0 && ingredients && ingredients.length > 0) {\r\n        selectIngredient = getSelectIngredients(ingredients, orderDetail[0].ingredients);\r\n    }\r\n\r\n    const quantityInOrder = (id: string, ids: string[]): number => {\r\n       return ids.filter(item => item === id).length\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {orderDetail && orderDetail.length > 0 && ingredients && ingredients.length > 0 && (\r\n                <div className={s.feedDetails} key={id}>\r\n                    <p className='text text_type_digits-default text_center mb-10'>#{id}</p>\r\n                    <p className='text text_type_main-medium mb-3'>{orderDetail[0].name}</p>\r\n\r\n                    <span className={`${s.status} text text_type_main-default`}>{returnStatus(orderDetail[0].status)}</span>\r\n                    <p className='text text_type_main-medium mt-15 mb-6'>Состав:</p>\r\n                    <div className={cn(s.feedIngredients, 'scroll', 'mb-10')}>\r\n                        {selectIngredient.map(({ name, image, _id, price }) => \r\n                        <div className={s.feedIngredient} key={_id}>\r\n                            <div className={cn(s.iconWrap, 'mr-4')}>\r\n                                <div className={s.iconBlackWrap}>\r\n                                    <img className={s.icon} alt={name} src={image} />\r\n                                </div>    \r\n                            </div>    \r\n                            <div className={cn(s.nameIngredient, 'text text_type_main-default mr-4')}>{name}</div>\r\n                            <p className='text text_type_digits-default'>{quantityInOrder(_id, orderDetail[0].ingredients)} x {price}&nbsp;</p>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                        )}\r\n                    </div>\r\n                    <div className='flexBox'>\r\n                        <p className={cn(s.date,'text text_type_main-default text_color_inactive')}>{getDate(orderDetail[0].createdAt)}</p>\r\n                        <p className='text text_type_digits-default'>{getOrderCost(ingredients, orderDetail[0].ingredients)}&nbsp;</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n    )}\r\n    </>\r\n    )\r\n}","import { MouseEvent } from 'react';\r\nimport { useAppDispatch } from '../utils/hooks';\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport { HomePage, LoginPage, Register, ForgotPassword, ResetPassword, Feed, Profile, ProfileOrders, NotFound404 } from '../pages';\r\nimport { IngredientDetails } from '../components/IngredientDetails';\r\nimport { ProtectedRoute } from './ProtectedRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { Modal } from './Modal';\r\nimport { closeModalDetails } from '../services/actions/actionsIngredient';\r\nimport { ILocationProps } from '../utils/types';\r\nimport { FeedDetails } from './FeedDetails';\r\n\r\nconst SwitchRoute = () => {\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation<ILocationProps>();\r\n  const modal = location.state && location.state?.modal;\r\n  const feed = location.state && location.state?.feed;\r\n  const order = location.state && location.state?.order;\r\n  const history = useHistory();\r\n\r\n  const handleCloseModal = (event: MouseEvent | undefined) => {\r\n    event?.stopPropagation();\r\n    history.goBack();\r\n    dispatch(closeModalDetails());\r\n}  \r\n\r\n  return (\r\n      <>\r\n        <Switch location={order || feed || modal || location}>\r\n          <Route path=\"/\" exact={true}>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/ingredients/:id\">\r\n            <IngredientDetails type=\"page\"/>\r\n          </Route>\r\n          \r\n          <PublicRoute path=\"/login\" exact={true} type=\"guest\">\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/register\" exact={true} type=\"guest\">\r\n            <Register />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/forgot-password\" exact={true} type=\"guest\">\r\n            <ForgotPassword />\r\n          </PublicRoute>\r\n          \r\n          <PublicRoute path=\"/reset-password\" exact={true} type=\"guest\">\r\n            <ResetPassword />\r\n          </PublicRoute>\r\n\r\n          <Route path=\"/feed\" exact={true}>\r\n            <Feed />\r\n          </Route>\r\n\r\n          <Route path=\"/feed/:id\" exact={true}> \r\n            <FeedDetails type=\"page\"/>\r\n          </Route>\r\n\r\n          <ProtectedRoute path=\"/profile\" exact={true}>\r\n            <Profile />\r\n          </ProtectedRoute>\r\n\r\n          <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n            <ProfileOrders />\r\n          </ProtectedRoute>\r\n\r\n          <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n            <FeedDetails type=\"page\" variant=\"orders\"/>\r\n          </ProtectedRoute>\r\n\r\n          <Route component={NotFound404} />\r\n        </Switch>\r\n\r\n        {modal && <Route path=\"/ingredients/:id\" children={<Modal onClose={handleCloseModal} header=\"Детали ингредиента\"><IngredientDetails /></Modal>} />}\r\n        {feed && <Route path=\"/feed/:id\" children={<Modal onClose={handleCloseModal}><FeedDetails /></Modal>} />}\r\n        {order && <Route path=\"/profile/orders/:id\" children={<Modal onClose={handleCloseModal}><FeedDetails /></Modal>} />}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default SwitchRoute;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Header } from '../Header';\r\nimport SwitchRoute from '../SwitchRoute';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <SwitchRoute />\r\n    </Router>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    POST_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    GET_ORDER_NUMBER_FAILED\r\n} from '../actions/OrderDetails';\r\nimport * as orderActions from '../actions/actionsOrderDetails';\r\nimport { TActions, TActionsCreators } from '../../utils/types';\r\n\r\nexport type TOrderState = {\r\n  orderRequest: boolean;\r\n  orderFailed: boolean;\r\n  orderSuccess: boolean;\r\n  number: string | null;\r\n}\r\n\r\nconst initialState: TOrderState = {\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n    orderSuccess: false,\r\n    number: null\r\n}\r\n\r\nexport type TOrderAction = TActions<TActionsCreators<typeof orderActions>>;\r\n\r\nexport const orderReducer = (state = initialState, action: TOrderAction): TOrderState => {\r\n    switch (action.type) {\r\n        case POST_ORDER_NUMBER_REQUEST: {\r\n          return {\r\n              ...state,\r\n              orderRequest: true,\r\n              orderSuccess: false,\r\n              orderFailed: false,\r\n          };\r\n        }\r\n        case GET_ORDER_NUMBER_SUCCESS: {\r\n          return { \r\n              ...state, \r\n              number: action.value,\r\n              orderSuccess: action.success,\r\n              orderRequest: false,\r\n          };\r\n        }\r\n        case GET_ORDER_NUMBER_FAILED: {\r\n          return { \r\n              ...state,\r\n              orderRequest: false,\r\n              orderSuccess: false,\r\n              orderFailed: true,\r\n          };\r\n        }\r\n        default: {\r\n          return state\r\n        }\r\n      }\r\n};","import {\r\n    INIT_USER,\r\n    AUTHORIZED,\r\n    POST_LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n\r\n    POST_LOGOUT, LOGOUT_FAILED, LOGOUT_SUCCESS,\r\n    POST_UPDATE_TOKEN, UPDATE_TOKEN_SUCCESS, UPDATE_TOKEN_FAILED,\r\n    GET_INFO_USER, GET_INFO_SUCCESS, GET_INFO_FAILED,\r\n    PATCH_INFO_USER, PATCH_INFO_SUCCESS, PATCH_INFO_FAILED,\r\n    POST_REGISTRY_USER, RESPONSE_SUCCESS_REGISTRY, RESPONSE_FAILED_REGISTRY,\r\n    POST_PASSWORD_REQUEST, RESPONSE_FAILED_PASSWORD, RESPONSE_SUCCESS_PASSWORD,\r\n    POST_NEW_PASSWORD_REQUEST, RESPONSE_FAILED_NEW_PASSWORD, RESPONSE_SUCCESS_NEW_PASSWORD\r\n} from '../actions/User';\r\nimport * as userActions from '../actions/actionsUser';\r\nimport { getAccessToken } from '../../utils/utils';\r\nimport { TActions, TActionsCreators, IUser } from '../../utils/types';\r\n\r\nexport type TUserState = {\r\n  loginRequest: boolean;\r\n  loginFailed: boolean;\r\n  loginSuccess: boolean;\r\n\r\n  logoutRequest: boolean;\r\n  logoutFailed: boolean;\r\n  logoutSuccess: boolean;\r\n\r\n  tokenRequest: boolean;\r\n  tokenFailed: boolean;\r\n  tokenSuccess: boolean;\r\n\r\n  getUserInfoRequest: boolean;\r\n  getUserInfoFailed: boolean;\r\n  getUserInfoSuccess: boolean;\r\n\r\n  patchUserInfoRequest: boolean;\r\n  patchUserInfoFailed: boolean;\r\n  patchUserInfoSuccess: boolean;\r\n\r\n  registerRequest: boolean;\r\n  registerFailed: boolean;\r\n  registerSuccess: boolean;\r\n\r\n  resetPasswordRequest: boolean;\r\n  resetPasswordFailed: boolean;\r\n  resetPasswordSuccess: boolean;\r\n\r\n  accessToken?: string;\r\n  refreshToken?: string;\r\n  authorized: boolean;\r\n  user?: IUser | null;\r\n}\r\n\r\nconst initialState: TUserState = {\r\n    loginRequest: false,\r\n    loginFailed: false,\r\n    loginSuccess: false,\r\n\r\n    logoutRequest: false,\r\n    logoutFailed: false,\r\n    logoutSuccess: false,\r\n\r\n    tokenRequest: false,\r\n    tokenFailed: false,\r\n    tokenSuccess: false,\r\n\r\n    getUserInfoRequest: false,\r\n    getUserInfoFailed: false,\r\n    getUserInfoSuccess: false,\r\n\r\n    patchUserInfoRequest: false,\r\n    patchUserInfoFailed: false,\r\n    patchUserInfoSuccess: false,\r\n\r\n    registerRequest: false,\r\n    registerFailed: false,\r\n    registerSuccess: false,\r\n\r\n    resetPasswordRequest: false,\r\n    resetPasswordFailed: false,\r\n    resetPasswordSuccess: false,\r\n\r\n    accessToken: undefined,\r\n    refreshToken: undefined,\r\n    \r\n    authorized: false,\r\n    user: JSON.parse(localStorage.getItem(\"user\") ?? \"null\")\r\n}\r\n\r\nexport type TUserAction = TActions<TActionsCreators<typeof userActions>>;\r\n\r\nexport const userReducer = (state = initialState, action: TUserAction): TUserState => {\r\n    switch (action.type) {\r\n        case AUTHORIZED: {\r\n          return {\r\n            ...state,\r\n            accessToken: getAccessToken(),\r\n          }\r\n        }\r\n        case INIT_USER: {\r\n          return {\r\n            ...state,\r\n            authorized: true,\r\n          }  \r\n        }\r\n        case POST_LOGIN_USER: {\r\n          return {\r\n              ...state,\r\n              loginRequest: true,\r\n              loginSuccess: false,\r\n              loginFailed: false,\r\n          };\r\n        }\r\n        case LOGIN_USER_SUCCESS: {\r\n            const tokens = {\"refreshToken\": action.refreshToken, \"accessToken\": action.accessToken};\r\n            localStorage.setItem('tokens', JSON.stringify(tokens));\r\n            localStorage.setItem('user', JSON.stringify({\"email\": action.user.email, \"name\": action.user.name}));\r\n            \r\n            return { \r\n              ...state,\r\n              accessToken: action.accessToken,\r\n              refreshToken: action.refreshToken,\r\n              loginSuccess: action.success,\r\n              user: action.user,\r\n              loginRequest: false,\r\n\r\n              authorized: true,\r\n          };\r\n        }\r\n        case LOGIN_USER_FAILED: {\r\n          return { \r\n              ...state,\r\n              loginRequest: false,\r\n              loginSuccess: false,\r\n              loginFailed: true,\r\n          };\r\n        }\r\n        case POST_LOGOUT: {\r\n          return { \r\n              ...state,\r\n              logoutRequest: true,\r\n              logoutSuccess: false,\r\n              logoutFailed: false,\r\n          };\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n          localStorage.clear();\r\n          return { \r\n              ...state,\r\n              logoutSuccess: true,\r\n              logoutRequest: false,\r\n              user: null,\r\n\r\n              authorized: false,\r\n          };\r\n        }\r\n        case LOGOUT_FAILED: {\r\n          return {\r\n            ...state,\r\n            logoutRequest: false,\r\n            logoutSuccess: false,\r\n            logoutFailed: true,\r\n        };\r\n        }\r\n        case POST_UPDATE_TOKEN: {\r\n            return {\r\n                ...state,\r\n                tokenRequest: true,\r\n                tokenSuccess: false,\r\n                tokenFailed: false,\r\n            };\r\n          }\r\n          case UPDATE_TOKEN_SUCCESS: {\r\n            const tokens = {\"refreshToken\": action.refreshToken, \"accessToken\": action.accessToken};\r\n            localStorage.setItem('tokens', JSON.stringify(tokens));\r\n            return { \r\n                ...state,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n                tokenSuccess: action.success,\r\n                tokenRequest: false,\r\n            };\r\n          }\r\n          case UPDATE_TOKEN_FAILED: {\r\n            return { \r\n                ...state,\r\n                tokenRequest: false,\r\n                tokenSuccess: false,\r\n                tokenFailed: true,\r\n            };\r\n          }\r\n          case GET_INFO_USER: {\r\n            return {\r\n                ...state,\r\n                getUserInfoRequest: true,\r\n                getUserInfoSuccess: false,\r\n                getUserInfoFailed: false,\r\n            };\r\n          }\r\n          case GET_INFO_SUCCESS: {\r\n            return { \r\n                ...state,\r\n                user: action.user,\r\n                getUserInfoSuccess: action.success,\r\n                getUserInfoRequest: false,\r\n            };\r\n          }\r\n          case GET_INFO_FAILED: {\r\n            return { \r\n                ...state,\r\n                getUserInfoRequest: false,\r\n                getUserInfoSuccess: false,\r\n                getUserInfoFailed: true,\r\n            };\r\n          }\r\n          case PATCH_INFO_USER: {\r\n            return {\r\n                ...state,\r\n                patchUserInfoRequest: true,\r\n                patchUserInfoSuccess: false,\r\n                patchUserInfoFailed: false,\r\n            };\r\n          }\r\n          case PATCH_INFO_SUCCESS: {\r\n            return { \r\n                ...state,\r\n                user: action.user,\r\n                patchUserInfoSuccess: action.success,\r\n                patchUserInfoRequest: false,\r\n            };\r\n          }\r\n          case PATCH_INFO_FAILED: {\r\n            return { \r\n                ...state,\r\n                patchUserInfoRequest: false,\r\n                patchUserInfoSuccess: false,\r\n                patchUserInfoFailed: true,\r\n            };\r\n          }\r\n          case POST_REGISTRY_USER: {\r\n            return {\r\n                ...state,\r\n                registerRequest: true,\r\n                registerSuccess: false,\r\n                registerFailed: false,\r\n            };\r\n          }\r\n          case RESPONSE_SUCCESS_REGISTRY: {\r\n            return { \r\n                ...state,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n                registerSuccess: action.success,\r\n                registerRequest: false\r\n            };\r\n          }\r\n          case RESPONSE_FAILED_REGISTRY: {\r\n            return { \r\n                ...state,\r\n                registerRequest: false,\r\n                registerSuccess: false,\r\n                registerFailed: true,\r\n            };\r\n          }\r\n          case POST_PASSWORD_REQUEST || POST_NEW_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: true,\r\n                resetPasswordSuccess: false,\r\n                resetPasswordFailed: false,\r\n            };\r\n          }\r\n          case RESPONSE_SUCCESS_PASSWORD || RESPONSE_SUCCESS_NEW_PASSWORD: {\r\n            return { \r\n                ...state,\r\n                resetPasswordSuccess: action.success,\r\n                resetPasswordRequest: false,\r\n            };\r\n          }\r\n          case RESPONSE_FAILED_PASSWORD || RESPONSE_FAILED_NEW_PASSWORD: {\r\n            return { \r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                resetPasswordSuccess: false,\r\n                resetPasswordFailed: true,\r\n            };\r\n          }\r\n          default: {\r\n              return state\r\n          }\r\n      }\r\n};","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    WS_CONNECTION_START_ORDERS,\r\n  } from '../actions/wsActionTypes';\r\n  import { TActions, TActionsCreators, IWsMessage } from '../../utils/types';\r\n  import * as wsActions from '../actions/actionsWs';\r\n  \r\n  export type TWsState = {\r\n    wsConnected: boolean;\r\n    messages: IWsMessage[];\r\n  }\r\n\r\n  const initialState: TWsState = {\r\n    wsConnected: false,\r\n    messages: [],\r\n  };\r\n\r\n  export type TWsAction = TActions<TActionsCreators<typeof wsActions>>;\r\n  \r\n  export const wsReducer = (state = initialState, action: TWsAction): TWsState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_START || WS_CONNECTION_START_ORDERS:\r\n          return {\r\n            ...state\r\n          };  \r\n      case WS_CONNECTION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          wsConnected: true\r\n        };\r\n  \r\n      case WS_CONNECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          wsConnected: false\r\n        };\r\n  \r\n      case WS_CONNECTION_CLOSED:\r\n        return {\r\n          ...state,\r\n          wsConnected: false\r\n        };\r\n  \r\n      case WS_GET_MESSAGE:\r\n        return {\r\n          ...state,\r\n          messages: state.messages && state.messages.length ? [...state.messages, { ...action.message }] : [{ ...action.message }]\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","\r\nimport { combineReducers } from 'redux';\r\nimport { orderReducer, TOrderState, TOrderAction } from './OrderDetails';\r\nimport { userReducer, TUserState, TUserAction } from './User';\r\nimport {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    DELETE_INGREDIENTS,\r\n    ADD_INGREDIENT_IN_ORDER,\r\n    DELETE_INGREDIENT_IN_ORDER,\r\n    ADD_INGREDIENT_BUN_IN_ORDER,\r\n    UPDATE_LOCATION_INGREDIENT_IN_ORDER,\r\n    CLOSE_MODAL_DETAILS,\r\n    OPEN_MODAL_DETAILS\r\n} from '../actions';\r\nimport update from 'immutability-helper';\r\nimport { IIngredient, TActions, TActionsCreators } from '../../utils/types';\r\nimport * as ingredientActions from '../actions/actionsIngredient';\r\nimport { TWsState, wsReducer, TWsAction } from './wsReducer';\r\n\r\ntype TIngredientState = {\r\n  ingredientsRequest: boolean;\r\n  ingredientsFailed: boolean;\r\n  ingredientsSuccess: boolean;\r\n  openIngredientId: string | null;\r\n  ingredients: IIngredient[];\r\n  ingredientsInOrder: IIngredient[];\r\n};\r\n\r\nconst initialState: TIngredientState = {\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n    ingredientsSuccess: false,\r\n\r\n    openIngredientId: null,\r\n\r\n    ingredients: [],\r\n    ingredientsInOrder: [],\r\n}\r\n\r\ntype TIngredientAction = TActions<TActionsCreators<typeof ingredientActions>>;\r\n\r\nexport const ingredientsReducer = (state = initialState, action: TIngredientAction): TIngredientState => {\r\n    switch (action.type) {\r\n      case GET_INGREDIENTS_REQUEST: {\r\n        return {\r\n            ...state,\r\n            ingredientsRequest: true,\r\n            ingredientsFailed: false,\r\n            ingredientsSuccess: false\r\n        };\r\n      }\r\n      case GET_INGREDIENTS_SUCCESS: {\r\n        return { \r\n            ...state, \r\n            ingredients: action.ingredients, \r\n            ingredientsSuccess: true,\r\n            ingredientsRequest: false, \r\n        };\r\n      }\r\n      case GET_INGREDIENTS_FAILED: {\r\n        return { \r\n            ...state, \r\n            ingredientsSuccess: false,\r\n            ingredientsRequest: false,\r\n            ingredientsFailed: true,\r\n        };\r\n      }\r\n      case ADD_INGREDIENT_IN_ORDER: {\r\n        return {\r\n          ...state,\r\n          ingredientsInOrder: [\r\n            ...state.ingredientsInOrder,\r\n            ...state.ingredients.filter(item => item._id === action._id).map(item => item ? {...item, id: action.id } : item),\r\n          ],\r\n        };\r\n      }\r\n      case ADD_INGREDIENT_BUN_IN_ORDER: {\r\n        return {\r\n          ...state,\r\n          ingredientsInOrder: [\r\n            ...state.ingredientsInOrder.filter(item => item.type !== 'bun'),\r\n            ...state.ingredients.filter(item => item._id === action._id),\r\n          ]\r\n        };\r\n      }\r\n      case DELETE_INGREDIENT_IN_ORDER: {\r\n        return { \r\n          ...state, \r\n          ingredientsInOrder: [...state.ingredientsInOrder].filter((value, index, array) => index !== array.findIndex((i) => i._id === action._id)),\r\n        };\r\n      }\r\n      case DELETE_INGREDIENTS: {\r\n        return { \r\n          ...state, \r\n          ingredientsInOrder: [],\r\n        };\r\n      }\r\n      case UPDATE_LOCATION_INGREDIENT_IN_ORDER: {\r\n        return { \r\n          ...state, \r\n          ingredientsInOrder: update(state.ingredientsInOrder, {\r\n            $splice: [\r\n              [action.dragIndex, 1],\r\n              [action.hoverIndex, 0, state.ingredientsInOrder[action.dragIndex]],\r\n            ],\r\n          }),\r\n        };\r\n      }\r\n      case OPEN_MODAL_DETAILS: {\r\n        return {\r\n            ...state,\r\n            openIngredientId: action._id,\r\n        };\r\n      }\r\n      case CLOSE_MODAL_DETAILS: {\r\n        return { \r\n            ...state,\r\n            openIngredientId: state.openIngredientId = null,\r\n        };\r\n      }\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n};\r\n\r\nexport type TAppState = {\r\n  ingredient: TIngredientState,\r\n  order: TOrderState,\r\n  user: TUserState,\r\n  ws: TWsState,\r\n}\r\n\r\nexport type TAppAction = TUserAction | TOrderAction | TIngredientAction | TWsAction;\r\n  \r\nexport const rootReducer = combineReducers<TAppState>({\r\n    ingredient: ingredientsReducer,\r\n    order: orderReducer,\r\n    user: userReducer,\r\n    ws: wsReducer,\r\n});\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\r\nimport { rootReducer, TAppState, TAppAction } from '../services/reducers';\r\nimport { userInitMiddleware } from './userInitMiddleware';\r\nimport { socketMiddleware } from './socketMiddleware';\r\nimport { authUser } from './actions/actionsUser';\r\nimport { wsActions } from '../services/actions/wsActionTypes';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']\r\n    ? (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(userInitMiddleware, socketMiddleware(wsActions), thunk as ThunkMiddleware));\r\n\r\nexport const store = createStore<TAppState, TAppAction, unknown, unknown>(rootReducer, enhancer);\r\n\r\nstore.dispatch(authUser());\r\n","import { Middleware } from \"redux\";\r\nimport { initUser } from './actions/actionsUser';\r\nimport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  GET_USER,\r\n  PATCH_USER,\r\n  AUTHORIZED,\r\n  INIT_ORDERS\r\n} from './actions/User';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { JWTDeCode } from '../utils/types';\r\nimport { TAppState, TAppAction } from '../services/reducers';\r\nimport { login, logout, getUser, patchUser, updateToken } from './actions/User';\r\nimport { GET_ORDER, getOrderNumber } from './actions/OrderDetails';\r\nimport { TThunkDispatch } from '../utils/hooks';\r\nimport { wsInitOrders } from '../services/actions/actionsWs';\r\n\r\nexport const userInitMiddleware: Middleware<{}, TAppState> = store => (next: TThunkDispatch)  => (action: TAppAction) => {\r\n  const token = localStorage.getItem('tokens') ?? null;\r\n    \r\n        if (token !== null) {\r\n          const { accessToken, refreshToken } = JSON.parse(token);\r\n          const decoder: JWTDeCode = jwtDecode(accessToken);\r\n          const expiredToken = decoder && decoder.exp < Date.now() / 1000;\r\n\r\n          switch (action.type) {\r\n            case AUTHORIZED: {\r\n              next(initUser());\r\n              break;\r\n            }\r\n            case LOGOUT: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(logout({ refreshToken: store.getState().user.refreshToken }));\r\n                }, 1000)\r\n              } else {\r\n                next(logout({ refreshToken }));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case GET_USER: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(getUser({ accessToken: store.getState().user.accessToken }));\r\n                }, 1000)\r\n              } else {\r\n                next(getUser({ accessToken }));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case PATCH_USER: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(patchUser(action.user, store.getState().user.accessToken ?? accessToken));\r\n                }, 1000)\r\n              } else {\r\n                next(patchUser(action.user, accessToken));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case GET_ORDER: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(getOrderNumber(action.ingredientIds, store.getState().user.accessToken ?? accessToken));\r\n                }, 1000)\r\n              } else {\r\n                next(getOrderNumber(action.ingredientIds, accessToken));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case INIT_ORDERS: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(wsInitOrders());\r\n                }, 1000)\r\n              } else {\r\n                next(wsInitOrders());\r\n              }\r\n\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n        \r\n        } else {\r\n\r\n          if (action.type === LOGIN) {\r\n            next(login(action.user));\r\n            return;\r\n          }\r\n\r\n        }  \r\n  next(action);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from '../src/services/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedDetails\":\"FeedDetails_feedDetails__3LKFE\",\"status\":\"FeedDetails_status__2sIdF\",\"feedIngredients\":\"FeedDetails_feedIngredients__3CWrX\",\"feedIngredient\":\"FeedDetails_feedIngredient__1Z53u\",\"nameIngredient\":\"FeedDetails_nameIngredient__26vik\",\"date\":\"FeedDetails_date__1LXpG\",\"iconWrap\":\"FeedDetails_iconWrap__2l2EW\",\"iconBlackWrap\":\"FeedDetails_iconBlackWrap__LtLvV\",\"icon\":\"FeedDetails_icon__B4dXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BurgerConstructor_root__CiQi_\",\"content\":\"BurgerConstructor_content__3UWiF\",\"scrollTrackVertical\":\"BurgerConstructor_scrollTrackVertical__1FXF2\",\"scrollThumbVertical\":\"BurgerConstructor_scrollThumbVertical__1THYX\",\"totalPrice\":\"BurgerConstructor_totalPrice__Drp2r\",\"price\":\"BurgerConstructor_price__32APl\",\"emptyCart\":\"BurgerConstructor_emptyCart__1iVEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1WL4t\",\"navigation\":\"Header_navigation__Q4RU8\",\"content\":\"Header_content__2KnVC\",\"links\":\"Header_links__PoTI8\",\"logo\":\"Header_logo__2K2u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BurgerIngredients_root__3V62U\",\"tabs\":\"BurgerIngredients_tabs__1b38V\",\"contentInScroll\":\"BurgerIngredients_contentInScroll__25t9G\",\"scrollTrackVertical\":\"BurgerIngredients_scrollTrackVertical__G5jr6\",\"scrollThumbVertical\":\"BurgerIngredients_scrollThumbVertical__Hboh8\",\"ingredients\":\"BurgerIngredients_ingredients__2wnGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"IngredientInList_card__1-ZGK\",\"price\":\"IngredientInList_price__1W7OA\",\"name\":\"IngredientInList_name__2H5-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1ZJHi\",\"close\":\"Modal_close__3BxHY\",\"head\":\"Modal_head__3-MyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"IngredientDetails_description__2TvCn\",\"imageCard\":\"IngredientDetails_imageCard__2plH6\",\"content\":\"IngredientDetails_content__2kMLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderNumber\":\"OrderDetails_orderNumber__1gEON\",\"content\":\"OrderDetails_content__1XYB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fillings\":\"IngredientInOrder_fillings__1a539\",\"bunTopBottom\":\"IngredientInOrder_bunTopBottom__1PWIL\"};"],"sourceRoot":""}