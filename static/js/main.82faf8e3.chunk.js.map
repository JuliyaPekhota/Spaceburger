{"version":3,"sources":["pages/pages.module.css","components/ModalOverlay/ModalOverlay.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/Header/Header.tsx","utils/hooks.ts","utils/constants.ts","services/actions/User.ts","services/actions/actionsUser.ts","pages/login.tsx","pages/profile.tsx","pages/forgot-password.tsx","pages/register.tsx","pages/reset-password.tsx","pages/not-found.tsx","utils/types.ts","services/actions/index.ts","services/actions/actionsIngredient.ts","components/IngredientInList/IngredientInList.tsx","components/BurgerIngredients/BurgerIngredients.tsx","images/check.svg","components/OrderDetails/OrderDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","services/actions/OrderDetails.ts","services/actions/actionsOrderDetails.ts","components/IngredientInOrder/IngredientInOrder.tsx","images/load.svg","components/Loader/Loader.tsx","components/BurgerConstructor/BurgerConstructor.tsx","pages/home.tsx","components/IngredientDetails/IngredientDetails.tsx","components/ProfileOrders/ProfileOrders.tsx","components/ProtectedRoute.tsx","components/PublicRoute.tsx","components/SwitchRoute.tsx","components/App/App.tsx","reportWebVitals.ts","services/reducers/OrderDetails.ts","services/reducers/User.ts","services/reducers/index.ts","services/store.ts","services/userInitMiddleware.ts","index.tsx","components/Header/Header.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/IngredientInList/IngredientInList.module.css","components/Modal/Modal.module.css","components/IngredientDetails/IngredientDetails.module.css","components/OrderDetails/OrderDetails.module.css","components/IngredientInOrder/IngredientInOrder.module.css","components/Loader/Loader.module.css"],"names":["module","exports","Header","pathname","useLocation","className","cn","s","header","navigation","content","links","to","isActive","includes","exact","type","logo","login","useAppThunkDispatch","useDispatch","useAppDispatch","useAppSelector","useSelector","BASE_URL","INIT_USER","AUTHORIZED","GET_USER","LOGIN","LOGOUT","PATCH_USER","POST_LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","POST_LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILED","POST_UPDATE_TOKEN","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","GET_INFO_USER","GET_INFO_SUCCESS","GET_INFO_FAILED","PATCH_INFO_USER","PATCH_INFO_FAILED","PATCH_INFO_SUCCESS","POST_REGISTRY_USER","RESPONSE_SUCCESS_REGISTRY","RESPONSE_FAILED_REGISTRY","POST_PASSWORD_REQUEST","RESPONSE_FAILED_PASSWORD","RESPONSE_SUCCESS_PASSWORD","POST_NEW_PASSWORD_REQUEST","RESPONSE_FAILED_NEW_PASSWORD","RESPONSE_SUCCESS_NEW_PASSWORD","logout","data","dispatch","userActions","fetch","method","headers","body","JSON","stringify","refreshToken","then","response","ok","Error","json","catch","error","console","updateToken","accessToken","success","getUser","email","user","name","patchUser","token","postingLogin","failedLogin","successLogin","postingLogout","failedLogout","successLogout","postingToken","failedToken","successToken","getUserInfo","failedUserInfo","successUserInfo","patchUserInfo","failedPatchInfo","successPatchInfo","failedRegistry","postingRegistry","successRegistry","failedRestoreEmail","postingPasswordRequest","successRestoreEmail","massage","failedNewPassword","postingNewPassword","successNewPassword","LoginPage","useState","password","setData","handleChangeData","e","currentTarget","value","trim","wrapForm","form","onSubmit","preventDefault","placeholder","onChange","icon","size","state","from","Profile","getUserInfoSuccess","store","isEditing","setIsEditing","useEffect","handleChange","profile","onClick","wrapEditForm","patchInfoUser","buttons","profileButton","buttonPrimary","ForgotPassword","setEmail","resetPasswordSuccess","message","restoreEmail","Register","registerSuccess","registry","ResetPassword","sendNewPassword","TypeElement","ItemTypes","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_INGREDIENT_IN_ORDER","DELETE_INGREDIENT_IN_ORDER","DELETE_INGREDIENTS","ADD_INGREDIENT_BUN_IN_ORDER","UPDATE_LOCATION_INGREDIENT_IN_ORDER","OPEN_MODAL_DETAILS","CLOSE_MODAL_DETAILS","getIngredients","ingredientAction","getIngredientsFailed","gettingIngredients","getIngredientsSuccess","ingredients","IngredientInList","_id","ingredient","ingredientsInOrder","filter","card","image","price","countIngredientInOrder","item","length","location","handleOpenModal","id","openModalDetails","useDrag","Ingredient","collect","monitor","opacity","isDragging","drag","modal","ref","style","count","src","alt","BurgerIngredients","sections","bunRef","useRef","sauceRef","mainRef","scrollBar","current","setCurrent","handleClickTab","scrollToTop","scrollTop","offsetTop","handleScroll","scroll","getScrollTop","bottomPointOfScroll","saucesPoint","mainPoint","root","tabs","map","tab","i","active","renderTrackVertical","props","scrollTrackVertical","renderThumbVertical","scrollThumbVertical","thumbSize","contentInScroll","onScroll","autoHeight","autoHeightMax","OrderDetails","number","order","orderNumber","imageCheckPath","ModalOverlay","stopPropagation","target","onOverlayClick","children","modalRoot","document","getElementById","Modal","container","useMemo","createElement","insertAdjacentElement","removeChild","pressEsc","useCallback","key","onClose","addEventListener","removeEventListener","ReactDOM","createPortal","close","head","GET_ORDER","POST_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_FAILED","getOrderNumber","ids","orderActions","postingOrderNumber","getOrderNumberFailed","getOrderNumberSuccess","IngredientInOrder","index","moveInOrder","position","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","bunTopBottom","Top","Bottom","isLocked","text","thumbnail","fillings","handleClose","actionDeleteIngredientInOrder","Loader","wrap","imageLoad","BurgerConstructor","orderSuccess","orderRequest","authorized","history","useHistory","isLoggedIn","showModal","setshowModal","sum","reduce","isBunInOrder","some","ingredientIds","moveIngredient","idIngredient","uuidv4","itemId","actionUpdatedIngredient","autoHeightMin","totalPrice","getOrder","push","disabled","emptyCart","HomePage","ingredientsSuccess","ingredientsRequest","ingredientsFailed","DndProvider","backend","HTML5Backend","IngredientDetails","typeIsPage","useParams","calories","proteins","fat","carbohydrates","imageCard","description","ProfileOrders","ProtectedRoute","rest","render","PublicRoute","isPathFromForgotPassword","isPathResetPassword","SwitchRoute","path","event","goBack","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","orderFailed","loginRequest","loginFailed","loginSuccess","logoutRequest","logoutFailed","logoutSuccess","tokenRequest","tokenFailed","tokenSuccess","getUserInfoRequest","getUserInfoFailed","patchUserInfoRequest","patchUserInfoFailed","patchUserInfoSuccess","registerRequest","registerFailed","resetPasswordRequest","resetPasswordFailed","undefined","parse","localStorage","getItem","openIngredientId","rootReducer","combineReducers","action","array","findIndex","update","$splice","tokens","setItem","clear","enhancer","window","compose","applyMiddleware","next","decoder","jwtDecode","expiredToken","exp","Date","now","setTimeout","getState","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.82faf8e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapForm\":\"pages_wrapForm__1HuDN\",\"form\":\"pages_form__GMR7J\",\"profile\":\"pages_profile__Jr63K\",\"wrapEditForm\":\"pages_wrapEditForm__24NCV\",\"sidebar\":\"pages_sidebar__3SxJ-\",\"buttons\":\"pages_buttons__2KrYN\",\"profileButton\":\"pages_profileButton__1ivx0\",\"buttonPrimary\":\"pages_buttonPrimary__2nG6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ModalOverlay_root__2Xt1g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BurgerConstructor_root__CiQi_\",\"content\":\"BurgerConstructor_content__3UWiF\",\"scrollTrackVertical\":\"BurgerConstructor_scrollTrackVertical__1FXF2\",\"scrollThumbVertical\":\"BurgerConstructor_scrollThumbVertical__1THYX\",\"totalPrice\":\"BurgerConstructor_totalPrice__Drp2r\",\"price\":\"BurgerConstructor_price__32APl\",\"emptyCart\":\"BurgerConstructor_emptyCart__1iVEo\"};","import { BurgerIcon, ListIcon, ProfileIcon, Logo }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, NavLink, useLocation } from 'react-router-dom';\r\nimport cn from \"classnames\";\r\nimport s from './Header.module.css';\r\n\r\nexport const Header = () => {    \r\n  const { pathname } = useLocation();\r\n    return (\r\n        <header className={cn(s.header, 'm-10')}>\r\n          <nav className={cn(s.navigation, 'mt-4 mb-4')}>\r\n            <ul className={s.content}>\r\n              <li className={s.links}>\r\n                <NavLink to=\"/\" className='pl-5 pr-5 mr-2' \r\n                isActive={() => pathname.includes('ingredients') || pathname === '/'}\r\n                exact={true}\r\n                >\r\n                  <BurgerIcon type=\"secondary\"/>\r\n                  <span className=\"ml-2 text text_type_main-default\">Конструктор</span>\r\n                </NavLink>\r\n\r\n                <NavLink to=\"/profile/orders\" className='pl-5 pr-5'>\r\n                  <ListIcon type=\"secondary\" />\r\n                  <span className=\"ml-2 text text_type_main-default\">Лента заказов</span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className={s.logo}>\r\n                <Link to='/'><Logo /></Link>\r\n              </li>\r\n\r\n              <li className={s.login}>\r\n                <NavLink to=\"/profile\" exact={true} className='pl-5 pr-5'>\r\n                  <ProfileIcon type=\"secondary\" />\r\n                  <span className=\"ml-2 text text_type_main-default\">Личный кабинет</span>\r\n                </NavLink> \r\n              </li>\r\n            </ul>\r\n          </nav>  \r\n        </header>\r\n      );\r\n  }","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch } from './types';\r\nimport { TAppState, TAppAction } from '../services/reducers';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nexport type TThunkDispatch = ThunkDispatch<{}, {}, TAppAction>;\r\n\r\nexport const useAppThunkDispatch = () => useDispatch<TThunkDispatch>();\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<TAppState> = useSelector;","export const BASE_URL = 'https://norma.nomoreparties.space/api/';","import { BASE_URL } from '../../utils/constants';\r\nimport { IRegistryUser, IToken, AppDispatch, IPasswordData } from '../../utils/types';\r\nimport * as userActions from './actionsUser';\r\n\r\nexport const INIT_USER = 'INIT_USER';\r\nexport const AUTHORIZED = 'AUTHORIZED';\r\nexport const GET_USER = 'GET_USER';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const PATCH_USER = 'PATCH_USER';\r\n\r\nexport const POST_LOGIN_USER = 'POST_LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\n\r\nexport const POST_LOGOUT = 'POST_LOGOUT';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED = 'LOGOUT_FAILED';\r\n\r\nexport const POST_UPDATE_TOKEN = 'POST_UPDATE_TOKEN';\r\nexport const UPDATE_TOKEN_SUCCESS = 'UPDATE_TOKEN_SUCCESS';\r\nexport const UPDATE_TOKEN_FAILED = 'UPDATE_TOKEN_FAILED';\r\n\r\nexport const GET_INFO_USER = 'GET_INFO_USER';\r\nexport const GET_INFO_SUCCESS = 'GET_INFO_SUCCESS';\r\nexport const GET_INFO_FAILED = 'GET_INFO_FAILED';\r\n\r\nexport const PATCH_INFO_USER = 'PATCH_INFO_USER';\r\nexport const PATCH_INFO_FAILED = 'PATCH_INFO_FAILED';\r\nexport const PATCH_INFO_SUCCESS = 'PATCH_INFO_SUCCESS';\r\n\r\nexport const POST_REGISTRY_USER = 'POST_REGISTRY_USER';\r\nexport const RESPONSE_SUCCESS_REGISTRY = 'RESPONSE_SUCCESS_REGISTRY';\r\nexport const RESPONSE_FAILED_REGISTRY = 'RESPONSE_FAILED_REGISTRY';\r\n\r\nexport const POST_PASSWORD_REQUEST = 'POST_PASSWORD_REQUEST';\r\nexport const RESPONSE_FAILED_PASSWORD = 'RESPONSE_FAILED_PASSWORD';\r\nexport const RESPONSE_SUCCESS_PASSWORD = 'RESPONSE_SUCCESS_PASSWORD';\r\n\r\nexport const POST_NEW_PASSWORD_REQUEST = 'POST_NEW_PASSWORD_REQUEST';\r\nexport const RESPONSE_FAILED_NEW_PASSWORD = 'RESPONSE_FAILED_NEW_PASSWORD';\r\nexport const RESPONSE_SUCCESS_NEW_PASSWORD = 'RESPONSE_SUCCESS_NEW_PASSWORD';\r\n\r\nexport const login = (data: IRegistryUser) => {\r\n  return (dispatch: AppDispatch) => { \r\n      dispatch(userActions.postingLogin());\r\n  \r\n      fetch(`${BASE_URL}auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedLogin());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successLogin(\r\n          response.success, \r\n          response.accessToken, \r\n          response.refreshToken, \r\n          { email: response.user.email, name: response.user.name }\r\n        ));  \r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedLogin());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport const logout = (data: IToken) => {\r\n  return (dispatch: AppDispatch) => { \r\n      dispatch(userActions.postingLogout());\r\n  \r\n      fetch(`${BASE_URL}auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \"token\": data.refreshToken})\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedLogout());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        dispatch(userActions.successLogout());\r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedLogout());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function updateToken(data: IToken) {\r\n  return function(dispatch: AppDispatch) { \r\n      dispatch(userActions.postingToken());\r\n  \r\n    return fetch(`${BASE_URL}auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': data.accessToken ?? \"\",\r\n        },\r\n        body: JSON.stringify({ \"token\": data.refreshToken})\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedToken());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successToken(response.success, response.accessToken, response.refreshToken));\r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedToken());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function getUser(data: IToken) {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(userActions.getUserInfo());\r\n  \r\n      fetch(`${BASE_URL}auth/user`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': data.accessToken ?? \"\",\r\n        },\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n            dispatch(userActions.failedUserInfo());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successUserInfo(response.success, { email: response.user.email, name: response.user.name }));  \r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedUserInfo());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function patchUser(data: IRegistryUser, token: string) {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(userActions.patchUserInfo());\r\n  \r\n      fetch(`${BASE_URL}auth/user`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(userActions.failedPatchInfo());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(userActions.successPatchInfo(response.success, { email: response.user.email, name: response.user.name }));  \r\n      })\r\n      .catch(error => {\r\n        dispatch(userActions.failedPatchInfo());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n\r\nexport function registry(data: IRegistryUser) {\r\n  return function(dispatch: AppDispatch) { \r\n    dispatch(userActions.postingRegistry());\r\n\r\n    fetch(`${BASE_URL}auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        dispatch(userActions.failedRegistry());\r\n        throw new Error('Network response was not OK');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      dispatch(userActions.successRegistry(response.success, response.accessToken, response.refreshToken));  \r\n    })\r\n    .catch(error => {\r\n      dispatch(userActions.failedRegistry());\r\n      console.error('There has been a problem with fetch operation:', error);\r\n    });\r\n  }\r\n}\r\n\r\nexport function restoreEmail(email: string) {\r\n  return function(dispatch: AppDispatch) { \r\n    dispatch(userActions.postingPasswordRequest());\r\n\r\n    fetch(`${BASE_URL}password-reset`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\"email\": email})\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        dispatch(userActions.failedRestoreEmail());\r\n        throw new Error('Network response was not OK');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      dispatch(userActions.successRestoreEmail(response.message, response.success)); \r\n    })\r\n    .catch(error => {\r\n      dispatch(userActions.failedRestoreEmail());\r\n      console.error('There has been a problem with fetch operation:', error);\r\n    });\r\n  }\r\n}\r\n\r\nexport function sendNewPassword(data: IPasswordData) {\r\nreturn function(dispatch: AppDispatch) { \r\n  dispatch(userActions.postingNewPassword());\r\n\r\n  fetch(`${BASE_URL}password-reset/reset`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      dispatch(userActions.failedNewPassword());\r\n      throw new Error('Network response was not OK');\r\n    }\r\n    return response.json();\r\n  })\r\n  .then(response => {\r\n    dispatch(userActions.successNewPassword(response.message, response.success));  \r\n  })\r\n  .catch(error => {\r\n    dispatch(userActions.failedNewPassword());\r\n    console.error('There has been a problem with fetch operation:', error);\r\n  });\r\n}\r\n}","import {\r\n  INIT_USER,\r\n  AUTHORIZED, \r\n  LOGIN,\r\n  LOGOUT,\r\n  GET_USER,\r\n  PATCH_USER,\r\n  POST_LOGIN_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGIN_USER_FAILED,\r\n\r\n  POST_LOGOUT,\r\n  LOGOUT_FAILED,\r\n  LOGOUT_SUCCESS,\r\n\r\n  POST_UPDATE_TOKEN,\r\n  UPDATE_TOKEN_SUCCESS,\r\n  UPDATE_TOKEN_FAILED,\r\n\r\n  GET_INFO_USER,\r\n  GET_INFO_SUCCESS,\r\n  GET_INFO_FAILED,\r\n\r\n  PATCH_INFO_USER,\r\n  PATCH_INFO_SUCCESS,\r\n  PATCH_INFO_FAILED,\r\n  \r\n  POST_REGISTRY_USER, RESPONSE_SUCCESS_REGISTRY, RESPONSE_FAILED_REGISTRY,\r\n  POST_PASSWORD_REQUEST, RESPONSE_FAILED_PASSWORD, RESPONSE_SUCCESS_PASSWORD,\r\n  POST_NEW_PASSWORD_REQUEST, RESPONSE_FAILED_NEW_PASSWORD, RESPONSE_SUCCESS_NEW_PASSWORD\r\n} from './User';\r\nimport { IRegistryUser, IUser } from '../../utils/types';\r\n\r\nexport const initUser = () => ({ type: INIT_USER }) as const;\r\nexport const authUser = () => ({ type: AUTHORIZED }) as const;\r\nexport const loginUser = (user: IRegistryUser) => ({ type: LOGIN, user }) as const;\r\nexport const logoutUser = () => ({ type: LOGOUT }) as const;\r\nexport const getInfoUser = () => ({ type: GET_USER }) as const;\r\nexport const patchInfoUser = (user: IRegistryUser) => ({ type: PATCH_USER, user }) as const;\r\n\r\n//Login\r\nexport const postingLogin = () => ({ type: POST_LOGIN_USER }) as const;\r\nexport const failedLogin = () => ({ type: LOGIN_USER_FAILED}) as const;\r\nexport const successLogin = (success: boolean, accessToken: string, refreshToken: string, user: IUser) => \r\n({ type: LOGIN_USER_SUCCESS, success, accessToken, refreshToken, user }) as const;\r\n\r\n//Logout\r\nexport const postingLogout = () => ({ type: POST_LOGOUT }) as const;\r\nexport const failedLogout = () => ({ type: LOGOUT_FAILED }) as const;\r\nexport const successLogout = () => ({ type: LOGOUT_SUCCESS }) as const;\r\n\r\n//Update token\r\nexport const postingToken = () => ({ type: POST_UPDATE_TOKEN }) as const;\r\nexport const failedToken = () => ({ type: UPDATE_TOKEN_FAILED }) as const;\r\nexport const successToken = (success: boolean, accessToken: string, refreshToken: string) => \r\n({ type: UPDATE_TOKEN_SUCCESS, success, accessToken, refreshToken }) as const;\r\n\r\n//Get Info about user\r\nexport const getUserInfo = () => ({ type: GET_INFO_USER }) as const;\r\nexport const failedUserInfo = () => ({ type: GET_INFO_FAILED }) as const;\r\nexport const successUserInfo = (success: boolean, user: IUser) => \r\n({ type: GET_INFO_SUCCESS, success, user }) as const;\r\n\r\n//Patch Info User\r\nexport const patchUserInfo = () => ({ type: PATCH_INFO_USER }) as const;\r\nexport const failedPatchInfo = () => ({ type: PATCH_INFO_FAILED }) as const;\r\nexport const successPatchInfo = (success: boolean, user: IUser) =>\r\n({ type: PATCH_INFO_SUCCESS, success, user }) as const;\r\n\r\n// Registry User\r\nexport const failedRegistry = () => ({ type: RESPONSE_FAILED_REGISTRY }) as const;\r\nexport const postingRegistry = () => ({ type: POST_REGISTRY_USER }) as const;\r\nexport const successRegistry = (success: boolean, accessToken: string, refreshToken: string) => \r\n({ type: RESPONSE_SUCCESS_REGISTRY, success, accessToken, refreshToken }) as const;\r\n\r\n//Restore Email\r\nexport const failedRestoreEmail = () => ({ type: RESPONSE_FAILED_PASSWORD }) as const;\r\nexport const postingPasswordRequest = () => ({ type: POST_PASSWORD_REQUEST }) as const;\r\nexport const successRestoreEmail = (massage: string, success: boolean) => \r\n({ type: RESPONSE_SUCCESS_PASSWORD, massage, success }) as const;\r\n\r\n// Send New Password\r\nexport const failedNewPassword = () => ({ type: RESPONSE_FAILED_NEW_PASSWORD }) as const;\r\nexport const postingNewPassword = () => ({ type: POST_NEW_PASSWORD_REQUEST }) as const;\r\nexport const successNewPassword = (massage: string, success: boolean) => \r\n({ type: RESPONSE_SUCCESS_NEW_PASSWORD, massage, success }) as const;","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { loginUser } from '../services/actions/actionsUser';\r\nimport { useAppDispatch } from '../utils/hooks';\r\nimport { ILocationFrom } from '../utils/types';\r\nimport s from './pages.module.css';\r\n\r\nexport function LoginPage() {\r\n  const [data, setData] = useState({ email: '', password: '' });\r\n  const dispatch = useAppDispatch();\r\n  const { pathname } = useLocation<ILocationFrom>();\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(data));\r\n  }\r\n  const handleChangeData = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value.trim() });\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Вход</h2>\r\n          <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'E-mail'}\r\n              onChange={handleChangeData}\r\n              value={data.email}\r\n              name={'email'}\r\n            />\r\n            <Input\r\n              type={'password'}\r\n              placeholder={'Пароль'}\r\n              onChange={handleChangeData}\r\n              icon={'ShowIcon'}\r\n              value={data.password}\r\n              name={'password'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Войти\r\n            </Button>\r\n          </form>\r\n          <p className='text text_type_main-default pb-4'>\r\n            <span className='text_color_inactive'>Вы — новый пользователь?</span> \r\n            <Link \r\n              to={{ \r\n                pathname: '/register', \r\n                state: { from: pathname }\r\n              }}\r\n            > Зарегистрироваться</Link>\r\n          </p>\r\n          <p className='text text_type_main-default'>\r\n            <span className='text_color_inactive'>Забыли пароль?</span>\r\n            <Link \r\n              to={{ \r\n                pathname: '/forgot-password', \r\n                state: { from: pathname }\r\n              }}\r\n            > Восстановить пароль</Link>\r\n          </p>\r\n  </div>\r\n)\r\n}","import { useState, ChangeEvent, useEffect, MouseEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { getInfoUser, patchInfoUser, logoutUser } from '../services/actions/actionsUser';\r\nimport { IRegistryUser } from '../utils/types';\r\nimport { TAppState } from '../services/reducers';\r\nimport { useAppDispatch, useAppSelector } from '../utils/hooks';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function Profile() {\r\n  const { getUserInfoSuccess } = useAppSelector((store: TAppState) => store.user);\r\n  const user = useAppSelector((store: TAppState) => store.user.user) as IRegistryUser;\r\n\r\n  const [data, setData] = useState<IRegistryUser>({ email: '', name: '', password: '' });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getInfoUser());\r\n  }, [dispatch]);\r\n  \r\n  useEffect(() => {\r\n    if (getUserInfoSuccess) {\r\n        setData(state => ({ ...state, email: user.email, name: user.name }));\r\n    }\r\n  }, [getUserInfoSuccess, user.email, user.name]);\r\n\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setIsEditing(false);\r\n    dispatch(patchInfoUser(data));\r\n  }\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setIsEditing(true);\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value });\r\n  }\r\n  const handleDiscardСhanges = () => {\r\n    setData({...data, email: user.email, name: user.name });\r\n    setIsEditing(false);\r\n  }\r\n  const handleClickLogout = (e: MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    dispatch(logoutUser());\r\n  }\r\n\r\n return (\r\n    <div className={`${s.profile} pl-5 pr-5`}>\r\n        <div className='sidebar'>\r\n            <nav className='text text_type_main-medium mb-20'>\r\n                <NavLink to=\"/profile\">Профиль</NavLink>\r\n                <NavLink to=\"/profile/orders\">История заказов</NavLink>\r\n                <Link to=\"/\" onClick={handleClickLogout}>\r\n                    Выход\r\n                </Link>\r\n            </nav>\r\n            <p className='text text_type_main-default text_color_inactive'>В этом разделе вы можете<br />изменить свои персональные данные</p>\r\n        </div>\r\n\r\n        <div className={s.wrapEditForm}>\r\n            <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        onChange={handleChange}\r\n                        value={data.name ?? \"\"}\r\n                        name={'name'}\r\n                        icon={'EditIcon'}\r\n                    />\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'Логин'}\r\n                        onChange={handleChange}\r\n                        value={data.email}\r\n                        name={'email'}\r\n                        icon={'EditIcon'}\r\n                    />\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Пароль'}\r\n                        onChange={handleChange}\r\n                        value={data.password}\r\n                        name={'password'}\r\n                        icon={'EditIcon'}\r\n                    />\r\n                    {isEditing && \r\n                        <div className={s.buttons}>\r\n                            <div className={s.profileButton}>\r\n                                <button \r\n                                    className={s.buttonPrimary}\r\n                                    type=\"button\" \r\n                                    onClick={handleDiscardСhanges}>\r\n                                    Отмена\r\n                                </button> \r\n                            </div>\r\n                            <div className={s.profileButton}>\r\n                                <Button type=\"primary\" size=\"medium\">\r\n                                    Сохранить\r\n                                </Button>\r\n                            </div>\r\n                        </div> \r\n                    }\r\n            </form>\r\n        </div>\r\n    </div>  \r\n)}","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { restoreEmail } from '../services/actions/User';\r\nimport { TAppState } from '../services/reducers';\r\nimport { useAppThunkDispatch, useAppSelector } from '../utils/hooks';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function ForgotPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const { resetPasswordSuccess } = useAppSelector((store: TAppState) => store.user);\r\n  const dispatch = useAppThunkDispatch();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const handleSendEmail = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(restoreEmail(email));\r\n  }\r\n  const handleChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n\r\n  if (resetPasswordSuccess) {\r\n    return <Redirect\r\n    to={{\r\n      pathname: '/reset-password',\r\n      state: { from: pathname }\r\n    }}\r\n  />\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Восстановление пароля</h2>\r\n      <form className={`${s.form} mb-20`} onSubmit={handleSendEmail}>\r\n        <Input\r\n            type={'email'}\r\n            placeholder={'Укажите e-mail'}\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n            name={'email'}\r\n          />\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Восстановить\r\n          </Button>\r\n      </form>\r\n      <p className='text text_type_main-default'>\r\n        <span className='text_color_inactive'>Вспомнили пароль?</span> \r\n        <Link to='/login'> Войти</Link>\r\n      </p>\r\n  </div>\r\n)\r\n}","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { TAppState } from '../services/reducers';\r\nimport { registry } from '../services/actions/User';\r\nimport { useAppThunkDispatch, useAppSelector } from '../utils/hooks';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function Register() {\r\n  const [data, setData] = useState({ name: '', email: '', password: '' });\r\n  const { registerSuccess } = useAppSelector((store: TAppState) => store.user);\r\n  const dispatch = useAppThunkDispatch();\r\n\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(registry(data));\r\n  }\r\n  const handleChangeData = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value });\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Регистрация</h2>\r\n     {registerSuccess ? \r\n     \"Успешно зарегистрирован\"\r\n     :\r\n     (<>\r\n        <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n            <Input\r\n              type={'text'}\r\n              placeholder={'Имя'}\r\n              onChange={handleChangeData}\r\n              value={data.name}\r\n              name={'name'}\r\n            />\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'E-mail'}\r\n              onChange={handleChangeData}\r\n              value={data.email}\r\n              name={'email'}\r\n            />\r\n            <Input\r\n              type={'password'}\r\n              placeholder={'Пароль'}\r\n              onChange={handleChangeData}\r\n              icon={'ShowIcon'}\r\n              value={data.password}\r\n              name={'password'}\r\n            />\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Зарегистрироваться\r\n            </Button>\r\n        </form>\r\n        <p className='text text_type_main-default'>\r\n            <span className='text_color_inactive'>Уже зарегистрированы?</span> \r\n            <Link to='/login'> Войти</Link>\r\n        </p>\r\n     </>)\r\n     }\r\n  </div>\r\n)\r\n}","import { useState, ChangeEvent } from 'react';\r\nimport { Input, Button }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppThunkDispatch } from '../utils/hooks';\r\nimport { sendNewPassword } from '../services/actions/User';\r\n\r\nimport s from './pages.module.css';\r\n\r\nexport function ResetPassword() {\r\n  const [data, setData] = useState({ password: '', token: '' });\r\n\r\n  const dispatch = useAppThunkDispatch();\r\n\r\n  const handleSendData = (e: ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(sendNewPassword(data));\r\n  }\r\n  const handleChangeData = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setData({ ...data, [e.currentTarget.name]: e.currentTarget.value });\r\n  }\r\n\r\n return (\r\n  <div className={s.wrapForm}>\r\n     <h2 className=\"text text_type_main-medium pb-6\">Восстановление пароля</h2>\r\n     <form className={`${s.form} mb-20`} onSubmit={handleSendData}>\r\n      <Input\r\n          type={'password'}\r\n          placeholder={'Введите новый пароль'}\r\n          onChange={handleChangeData}\r\n          icon={'ShowIcon'}\r\n          value={data.password}\r\n          name={'password'}\r\n        />\r\n      <Input\r\n          type={'text'}\r\n          placeholder={'Введите код из письма'}\r\n          onChange={handleChangeData}\r\n          value={data.token}\r\n          name={'token'}\r\n        />\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Сохранить\r\n        </Button>\r\n     </form>\r\n     <p className='text text_type_main-default'>\r\n      <span className='text_color_inactive'>Вспомнили пароль?</span> \r\n      <Link to='/login'> Войти</Link>\r\n     </p>\r\n  </div>\r\n)\r\n}","export const NotFound404 = () => {\r\n\r\n    console.log(\"NotFound404\");\r\n}","import { store } from '../services/store';\r\n\r\nexport type TActionsKeys<T> = {\r\n [K in keyof T] : T[K] extends Function ? K : never\r\n}[keyof T];\r\nexport type TActionsCreators<T> = Pick<T, TActionsKeys<T>>;\r\nexport type TActions<TCreators> = {\r\n  [K in keyof TCreators] : TCreators[K] extends (...args: any) => infer U ? U : never\r\n}[keyof TCreators];\r\n\r\nexport interface IDragItem {\r\n  _id: string;\r\n}\r\n\r\nexport interface IDropItem {\r\n  index: number\r\n}\r\n\r\nexport interface IIngredient {\r\n  _id: string;\r\n  id?: string;\r\n  name: string;\r\n  type: string;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n  price: number;\r\n  image: string;\r\n  image_mobile: string;\r\n  image_large: string;\r\n}\r\n\r\nexport interface IDataOfIngredient {\r\n  position?: string;\r\n  index?: number;\r\n  moveInOrder?: (dragIndex: number, hoverIndex: number) => void;\r\n  _id: string;\r\n}\r\n\r\nexport interface IPasswordData {\r\n  password: string;\r\n  token: string;\r\n}\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport interface IRegistryUser {\r\n  name?: string;\r\n  password: string;\r\n  email: string;\r\n}\r\n\r\nexport interface ILocationModal<T> {\r\n  pathname: string;\r\n  search: string;\r\n  state: T;\r\n  hash: string;\r\n  key?: string | undefined;\r\n}\r\n\r\nexport interface ILocation {\r\n  hash: string;\r\n  key: string;\r\n  pathname?: string;\r\n  search: string;\r\n  state?: ILocationFrom;\r\n}\r\n\r\nexport interface ILocationFrom {\r\n  from: string;\r\n  modal?: string\r\n}\r\n\r\nexport interface IToken {\r\n  accessToken?: string;\r\n  refreshToken?: string;\r\n}\r\n\r\nexport type JWTDeCode = {\r\n  iat: number,\r\n  exp: number\r\n}\r\n\r\nexport enum TypeElement {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ItemTypes  {\r\n  IngredientInOrder = 'ingredientInOrder',\r\n  Ingredient = 'ingredient'\r\n}\r\n\r\nexport type AppDispatch = typeof store.dispatch;","import { BASE_URL } from '../../utils/constants';\r\nimport { AppDispatch } from '../../utils/types';\r\nimport * as ingredientAction from './actionsIngredient';\r\n\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT_IN_ORDER = 'ADD_INGREDIENT_IN_ORDER';\r\nexport const DELETE_INGREDIENT_IN_ORDER = 'DELETE_INGREDIENT_IN_ORDER';\r\nexport const DELETE_INGREDIENTS = 'DELETE_INGREDIENTS';\r\nexport const ADD_INGREDIENT_BUN_IN_ORDER = 'ADD_INGREDIENT_BUN_IN_ORDER';\r\nexport const UPDATE_LOCATION_INGREDIENT_IN_ORDER = 'UPDATE_LOCATION_INGREDIENT_IN_ORDER';\r\n\r\nexport const OPEN_MODAL_DETAILS = 'OPEN_MODAL_DETAILS';\r\nexport const CLOSE_MODAL_DETAILS = 'CLOSE_MODAL_DETAILS';\r\n\r\nexport function getIngredients() {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(ingredientAction.gettingIngredients());\r\n  \r\n      fetch(`${BASE_URL}ingredients`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(ingredientAction.getIngredientsFailed());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(ingredientAction.getIngredientsSuccess(response.success, response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(ingredientAction.getIngredientsFailed());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}\r\n","import {\r\n    GET_INGREDIENTS_FAILED,\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    UPDATE_LOCATION_INGREDIENT_IN_ORDER,\r\n    DELETE_INGREDIENT_IN_ORDER,\r\n    DELETE_INGREDIENTS,\r\n    OPEN_MODAL_DETAILS,\r\n    CLOSE_MODAL_DETAILS\r\n  } from './index';\r\nimport { IIngredient } from '../../utils/types';\r\n\r\nexport const deleteIngredients = () => ({ type: DELETE_INGREDIENTS }) as const;  \r\nexport const actionDeleteIngredientInOrder = (_id: string) => \r\n({ type: DELETE_INGREDIENT_IN_ORDER, _id }) as const;\r\nexport const getIngredientsFailed = () => ({ type: GET_INGREDIENTS_FAILED }) as const;\r\nexport const gettingIngredients = () => ({ type: GET_INGREDIENTS_REQUEST }) as const;\r\nexport const getIngredientsSuccess = (success: boolean, ingredients: IIngredient[]) => \r\n  ({ type: GET_INGREDIENTS_SUCCESS, success, ingredients }) as const;\r\n\r\nexport const actionUpdatedIngredient = (dragIndex: number, hoverIndex: number) => \r\n({ type: UPDATE_LOCATION_INGREDIENT_IN_ORDER, dragIndex, hoverIndex }) as const;\r\n\r\nexport const gettingIngredientBun = (type: \"ADD_INGREDIENT_BUN_IN_ORDER\" | \"ADD_INGREDIENT_IN_ORDER\", id: string, _id?: string) => \r\n({ type: type, id, _id }) as const;\r\n\r\nexport const openModalDetails = (_id: string) => ({ type: OPEN_MODAL_DETAILS, _id }) as const;\r\nexport const closeModalDetails = () => ({ type: CLOSE_MODAL_DETAILS }) as const;","import { FC } from 'react';\r\nimport { ItemTypes, IIngredient } from '../../utils/types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDrag } from 'react-dnd';\r\nimport { TAppState } from '../../services/reducers';\r\nimport { Counter, CurrencyIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { openModalDetails } from '../../services/actions/actionsIngredient';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\n\r\nimport s from './IngredientInList.module.css';\r\n\r\ninterface IIngredientInListProps {\r\n    _id: string;\r\n}\r\n\r\nexport const IngredientInList: FC<IIngredientInListProps> = ({ _id }) => {\r\n    const { ingredients, ingredientsInOrder } = useAppSelector((store: TAppState) => store.ingredient);\r\n    const { name, image, price } = ingredients.filter((card: IIngredient) => card._id === _id)[0];\r\n    const dispatch = useAppDispatch();\r\n    const countIngredientInOrder = ingredientsInOrder.filter(item => item._id === _id).length;\r\n    const location = useLocation();\r\n\r\n    const handleOpenModal = (id: string) => {\r\n        dispatch(openModalDetails(id));\r\n    };\r\n \r\n    const [{ opacity }, drag] = useDrag({\r\n        type: ItemTypes.Ingredient,\r\n        item: { _id },\r\n        collect: monitor => ({\r\n            opacity: monitor.isDragging() ? 0.5 : 1\r\n        })\r\n    });\r\n\r\n      return (    \r\n            <Link onClick={() => handleOpenModal(_id)} key={_id}\r\n                  to={{\r\n                        pathname: `/ingredients/${_id}`,\r\n                        state: { modal: location }\r\n                  }}\r\n            >\r\n                <div ref={drag} style={{ opacity }} className={`${s.card} pr-4 pl-4`}>\r\n                    {countIngredientInOrder > 0 && <Counter count={countIngredientInOrder} size='default' />}\r\n                    <img src={image} alt={name} />\r\n                    <span className={`${s.price} mt-1 mb-1 text text_type_digits-default`}>{price} <CurrencyIcon type=\"primary\" /></span>\r\n                    <span className={`${s.name} text text_type_main-default`}>{name}</span>\r\n                </div>\r\n            </Link>    \r\n      )\r\n}","import { FC, useRef, useState } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { IngredientInList } from '../IngredientInList';\r\nimport { useSelector } from 'react-redux';\r\nimport { IIngredient } from '../../utils/types';\r\nimport { TAppState } from '../../services/reducers';\r\n\r\nimport cn from \"classnames\";\r\nimport s from './BurgerIngredients.module.css';\r\n\r\nconst THUMB_HEIGHT = 230;\r\n\r\nexport const BurgerIngredients: FC = () => {\r\n    const { ingredients } = useSelector((store: TAppState) => store.ingredient);\r\n\r\n    const sections = ['bun', 'sauce', 'main'];\r\n    const bunRef = useRef<HTMLDivElement>(null);\r\n    const sauceRef = useRef<HTMLDivElement>(null);\r\n    const mainRef = useRef<HTMLDivElement>(null);\r\n    const scrollBar = useRef<Scrollbars>(null);\r\n\r\n    const [current, setCurrent] = useState('bun');\r\n\r\n    const handleClickTab = (value: string) => {\r\n        setCurrent(value);\r\n        if (value === 'bun'){\r\n            scrollBar.current?.scrollToTop();\r\n        }\r\n        if (value === 'sauce' && sauceRef && sauceRef.current){\r\n            scrollBar.current?.scrollTop(sauceRef.current.offsetTop);\r\n        }\r\n        if (value === 'main' && mainRef && mainRef.current){\r\n            scrollBar.current?.scrollTop(mainRef.current.offsetTop);\r\n        }\r\n     }\r\n\r\n     const handleScroll = () => {\r\n        const scroll = scrollBar?.current?.getScrollTop() || 0;\r\n        const bottomPointOfScroll = scroll ? scroll + THUMB_HEIGHT : 0;\r\n        const saucesPoint = sauceRef?.current?.offsetTop || 0;\r\n        const mainPoint = mainRef?.current?.offsetTop || 0;\r\n        \r\n        if (bottomPointOfScroll >= mainPoint) {\r\n            setCurrent('main');\r\n        } else if (bottomPointOfScroll >= saucesPoint) {\r\n            setCurrent('sauce');\r\n        } else {\r\n            setCurrent('bun');\r\n        }\r\n     }\r\n\r\n    const tabs = () => {\r\n        return (  \r\n          <>\r\n            <nav className={cn(s.tabs, 'mb-10')}>\r\n                {sections.map((tab, i) => (\r\n                    <Tab key={`tab${i}${tab}`} value={tab} active={current === tab} onClick={handleClickTab}>\r\n                        {tab === 'bun' ? 'Булки' : tab === 'sauce' ? 'Соусы' : 'Начинки'}\r\n                    </Tab>\r\n                    )\r\n                )}\r\n            </nav>\r\n\r\n            <Scrollbars \r\n                renderTrackVertical={({...props}) => <div {...props} className={s.scrollTrackVertical}/>} \r\n                renderThumbVertical={({...props}) => <div {...props} className={s.scrollThumbVertical}/>}\r\n                ref={scrollBar} \r\n                thumbSize={THUMB_HEIGHT}\r\n                className={s.contentInScroll}\r\n                onScroll={handleScroll}\r\n                autoHeight={true}\r\n                autoHeightMax={716}\r\n            >\r\n               {sections.map((tab, i) => (\r\n                    <div key={`${i}${tab}`} ref={tab === 'bun' ? bunRef : tab === 'sauce' ? sauceRef : mainRef}>\r\n                        <h2>{tab === 'bun' ? 'Булки' : tab === 'sauce' ? 'Соусы' : 'Начинки'}</h2>\r\n                        <section className={`${s.ingredients} mt-6 mb-10 mr-4 ml-4`}>\r\n                            {\r\n                              ingredients\r\n                              .filter(({ type }: IIngredient) => type === tab)\r\n                              .map(({ _id }: IIngredient) => \r\n                                  <IngredientInList key={_id} _id={_id} />\r\n                              )\r\n                            }\r\n                        </section>\r\n                    </div>\r\n               ))\r\n               }\r\n             </Scrollbars>\r\n          </>\r\n        )\r\n    }\r\n   \r\n    return (\r\n            <section className={`${s.root} mb-10`}>\r\n                <h1 className='text text_type_main-large mb-5'>Соберите бургер</h1>\r\n                {tabs()}\r\n            </section>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/check.2022ce2b.svg\";","\r\nimport { FC } from 'react';\r\nimport { TAppState } from '../../services/reducers';\r\nimport { useSelector } from 'react-redux';\r\nimport imageCheckPath from '../../images/check.svg';\r\n\r\nimport s from './OrderDetails.module.css';\r\n\r\nexport const OrderDetails: FC = () => {\r\n    const { number } = useSelector((store: TAppState) => store.order);\r\n    return (\r\n        <section className={`${s.content} mt-20 mb-20`}>\r\n            <span className={`${s.orderNumber} text text_type_digits-large`}>{number}</span>\r\n            <span className='mt-8 mb-15 text text_type_main-medium'>идентификатор заказа</span>\r\n            <img src={imageCheckPath} alt=\"check\"/>\r\n            <span className='mt-15 mb-2 text text_type_main-default'>Ваш заказ начали готовить</span>\r\n            <span className='text text_type_main-default text_color_inactive'>Дождитесь готовности на орбитальной станции</span>\r\n        </section>\r\n    )\r\n}","import { ReactNode, useRef } from 'react';\r\nimport s from './ModalOverlay.module.css';\r\n\r\nexport interface IModalOverlay {\r\n    onOverlayClick: (event?: React.MouseEvent) => void;\r\n    children?: ReactNode;\r\n}\r\n\r\nexport const ModalOverlay = (props: IModalOverlay) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const onOverlayClick = (e: React.MouseEvent | undefined) => {\r\n        e?.stopPropagation();\r\n        if (ref.current?.className === (e?.target as HTMLDivElement).className) {\r\n            props.onOverlayClick();\r\n        }\r\n      }\r\n\r\n    return(\r\n        <div ref={ref} onClick={onOverlayClick} className={s.root}>{props.children}</div>\r\n    );\r\n}","import { useMemo, useEffect, useCallback, ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ModalOverlay } from '../ModalOverlay';\r\nimport { CloseIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.getElementById(\"modals\") || document.body;\r\n\r\nexport interface IModal {\r\n  header?: string;\r\n  onClose: (event?: React.MouseEvent) => void;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const Modal = (props: IModal) => {\r\n    const container = useMemo(() => document.createElement(\"div\"), []);\r\n\r\n    useEffect(() => {\r\n      modalRoot.insertAdjacentElement('beforeend', container);\r\n        return () => {\r\n          modalRoot.removeChild(container);\r\n        };\r\n      }, [container]);\r\n    \r\n    const pressEsc = useCallback((e: KeyboardEvent) => {\r\n        if(e.key === \"Escape\") {\r\n          props?.onClose();\r\n        }\r\n      }, [props]\r\n    )\r\n\r\n    useEffect(() => {\r\n      document.addEventListener(\"keydown\", pressEsc);\r\n    \r\n        return () => {\r\n          document.removeEventListener(\"keydown\", pressEsc);\r\n        };\r\n    }, [pressEsc]);\r\n\r\n    return ReactDOM.createPortal(\r\n      <>\r\n        <ModalOverlay onOverlayClick={props.onClose}>\r\n          <div className={`${s.modal} pt-10 pl-10 pb-15 pr-10`}>\r\n            <div className={`${s.close} pt-15 pr-10`} onClick={props.onClose}>\r\n              <CloseIcon type=\"primary\" />\r\n            </div>\r\n            <h1 className={`${s.head} text text_type_main-large`}>{props.header}</h1>\r\n            {props.children}\r\n          </div>\r\n        </ModalOverlay>\r\n      </>\r\n      , container);\r\n}","import { BASE_URL } from '../../utils/constants';\r\nimport * as orderActions from './actionsOrderDetails';\r\nimport { deleteIngredients } from './actionsIngredient';\r\nimport { AppDispatch } from '../../utils/types';\r\n\r\nexport const GET_ORDER = 'GET_ORDER';\r\nexport const POST_ORDER_NUMBER_REQUEST = 'POST_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_SUCCESS = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const GET_ORDER_NUMBER_FAILED = 'GET_ORDER_NUMBER_FAILED';\r\n\r\nexport function getOrderNumber(ids: Array<string>, token: string) {\r\n    return function(dispatch: AppDispatch) { \r\n      dispatch(orderActions.postingOrderNumber());\r\n  \r\n      fetch(`${BASE_URL}orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token,\r\n        },\r\n        body: JSON.stringify({\"ingredients\": ids})\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          dispatch(orderActions.getOrderNumberFailed());\r\n          throw new Error('Network response was not OK');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch(orderActions.getOrderNumberSuccess(response.success, response.order.number));\r\n        dispatch(deleteIngredients()); \r\n      })\r\n      .catch(error => {\r\n        dispatch(orderActions.getOrderNumberFailed());\r\n        console.error('There has been a problem with fetch operation:', error);\r\n      });\r\n    }\r\n}","import { GET_ORDER, POST_ORDER_NUMBER_REQUEST, GET_ORDER_NUMBER_SUCCESS, GET_ORDER_NUMBER_FAILED } from './OrderDetails';\r\n\r\nexport const getOrder = (ingredientIds: Array<string>) => ({ type: GET_ORDER, ingredientIds }) as const;\r\n\r\nexport const postingOrderNumber = () => ({ type: POST_ORDER_NUMBER_REQUEST }) as const;\r\nexport const getOrderNumberFailed = () => ({ type: GET_ORDER_NUMBER_FAILED }) as const;\r\nexport const getOrderNumberSuccess = (success: boolean, value: string) => \r\n  ({ type: GET_ORDER_NUMBER_SUCCESS, success, value }) as const;","import { FC, useRef } from 'react';\r\nimport s from './IngredientInOrder.module.css';\r\nimport { ConstructorElement, DragIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IDataOfIngredient, ItemTypes, TypeElement, IIngredient, IDropItem } from '../../utils/types';\r\nimport { actionDeleteIngredientInOrder } from '../../services/actions/actionsIngredient';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { useDrag, useDrop, DropTargetMonitor } from 'react-dnd';\r\nimport { TAppState } from '../../services/reducers';\r\nimport { XYCoord } from 'dnd-core';\r\nimport cn from \"classnames\";\r\n\r\nexport const IngredientInOrder: FC<IDataOfIngredient> = ({ index, moveInOrder, position, _id }) => {\r\n  const { ingredientsInOrder } = useAppSelector((store: TAppState) => store.ingredient);\r\n  const { type, name, price, image, id } = ingredientsInOrder.filter((card: IIngredient) => card._id === _id)[0];\r\n\r\n    const dispatch = useAppDispatch();\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    \r\n    const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.IngredientInOrder,\r\n    collect: monitor => ({\r\n      handlerId: monitor.getHandlerId(),\r\n    }),\r\n    hover(item: IDropItem, monitor: DropTargetMonitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index ?? 0;\r\n\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset()\r\n\r\n      // Get pixels to the top\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top\r\n\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      // Time to actually perform the action\r\n      moveInOrder?.(dragIndex, hoverIndex);\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex\r\n    },\r\n  });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n      type: ItemTypes.IngredientInOrder,\r\n      item: () => {\r\n        return { id, index }\r\n      },\r\n      collect: monitor => ({\r\n        isDragging: monitor.isDragging(),\r\n      }),\r\n    });\r\n\r\n    drag(drop(ref));\r\n    \r\n    const onDelete = () => dispatch(actionDeleteIngredientInOrder(_id));\r\n\r\n    const opacity = isDragging ? 0 : 1;\r\n    return type === 'bun' ? \r\n        (\r\n          <div className={s.bunTopBottom}>\r\n            <ConstructorElement\r\n              type={position === 'top' ? TypeElement.Top : TypeElement.Bottom}\r\n              isLocked\r\n              text={`${name} (${position === 'top' ? 'верх' : 'низ'})`}\r\n              price={price}\r\n              thumbnail={image}\r\n            />\r\n          </div>\r\n        )\r\n        :\r\n        (\r\n          <div ref={ref} style={{ opacity }} className={cn(s.fillings, 'mb-4 mr-4 ml-4')} data-handler-id={handlerId}>\r\n              <DragIcon type=\"primary\" />\r\n              <ConstructorElement\r\n              isLocked={type === 'bun'}\r\n              text={name}\r\n              price={price}\r\n              thumbnail={image}\r\n              handleClose={onDelete}\r\n              />\r\n          </div>\r\n        )\r\n}","export default __webpack_public_path__ + \"static/media/load.aad0b153.svg\";","import { FC } from 'react';\r\nimport imageLoad from '../../images/load.svg';\r\n\r\nimport s from './Loader.module.css';\r\n\r\nexport const Loader: FC = () => {\r\n    return (\r\n        <div className={s.wrap}>\r\n            Загрузка <img className={s.image} src={imageLoad} alt='loading'/>\r\n        </div>\r\n    )\r\n}","import { FC, useState, useCallback, useMemo } from 'react';\r\nimport { Button, CurrencyIcon, BurgerIcon }  from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ItemTypes, IIngredient, IDragItem } from '../../utils/types';\r\nimport { OrderDetails } from '../OrderDetails';\r\nimport { Modal } from '../../components/Modal';\r\nimport { ADD_INGREDIENT_IN_ORDER,\r\n         ADD_INGREDIENT_BUN_IN_ORDER } from '../../services/actions';\r\nimport { TAppState } from '../../services/reducers';\r\nimport { actionUpdatedIngredient, gettingIngredientBun } from '../../services/actions/actionsIngredient';\r\nimport { getOrder } from '../../services/actions/actionsOrderDetails';\r\nimport { useAppDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport { IngredientInOrder } from '../IngredientInOrder';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Loader } from '../Loader';\r\n\r\nimport s from './BurgerConstructor.module.css';\r\n\r\nexport const BurgerConstructor: FC = () => {\r\n  const { \r\n    ingredients, \r\n    ingredientsInOrder\r\n  } = useAppSelector((store: TAppState) => store.ingredient);\r\n  const { orderSuccess, orderRequest } = useAppSelector((store: TAppState) => store.order);\r\n  const { authorized } = useAppSelector((store: TAppState) => store.user);\r\n  const history = useHistory();\r\n  const isLoggedIn = authorized;\r\n\r\n  const [showModal, setshowModal] = useState(false);\r\n  const sum = useMemo(\r\n    () => (ingredientsInOrder as IIngredient[]).reduce((sum, { type, price }) => type === 'bun' ? sum + price * 2 : sum + price, 0),\r\n    [ingredientsInOrder]\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isBunInOrder = useMemo(\r\n    () => ingredientsInOrder.some(({ type }) => type === 'bun'),\r\n    [ingredientsInOrder]\r\n  );\r\n\r\n  const ingredientIds = ingredientsInOrder.map(card => card?._id);\r\n\r\n  const moveIngredient = useCallback((item: IDragItem) => {\r\n    const ingredient = ingredients.filter((card: IIngredient) => card._id === item._id)[0];\r\n    const idIngredient = uuidv4();\r\n    dispatch(gettingIngredientBun(ingredient.type === 'bun' ? ADD_INGREDIENT_BUN_IN_ORDER : ADD_INGREDIENT_IN_ORDER, idIngredient, item._id));\r\n  },\r\n  [dispatch, ingredients],\r\n  );\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.Ingredient,\r\n    drop(itemId: IDragItem) {\r\n      moveIngredient(itemId);\r\n    },\r\n  });\r\n\r\n  const moveInOrder = useCallback((dragIndex: number, hoverIndex: number) => {\r\n        dispatch(actionUpdatedIngredient(dragIndex, hoverIndex));\r\n    }, [dispatch],\r\n  );\r\n\r\n const handleOpenModal = () => {\r\n  if (isLoggedIn) {\r\n    setshowModal(true);\r\n    dispatch(getOrder(ingredientIds));\r\n  } else {\r\n    history.push(\"/login\");\r\n  }\r\n};\r\nconst handleCloseModal = () => setshowModal(false);\r\n\r\nconst bunTopBottom = (position: string) => {\r\n  return ingredientsInOrder\r\n  .filter((ingredient: IIngredient) => ingredient.type === 'bun')\r\n  .map((ingredient: IIngredient, i) => \r\n     <IngredientInOrder position={position} key={uuidv4()} index={i} _id={ingredient._id}/>\r\n  )\r\n}\r\n\r\n  return (\r\n    <>\r\n      {showModal ? (\r\n        <Modal onClose={handleCloseModal}>\r\n          {orderRequest && <Loader />}\r\n          {orderSuccess && <OrderDetails />} \r\n        </Modal>\r\n      ) : null\r\n      }\r\n\r\n      <section className={`${s.root} pt-25`}>\r\n        <div ref={drop} className={`${s.content} mb-10`}>\r\n          {ingredientsInOrder.length > 0 \r\n          ?\r\n          (<>\r\n              {bunTopBottom('top')}\r\n              <Scrollbars \r\n              renderTrackVertical={({...props}) =><div {...props} className={s.scrollTrackVertical}/>} \r\n              renderThumbVertical={({...props}) =><div {...props} className={s.scrollThumbVertical}/>}\r\n              autoHeight={true}\r\n              autoHeightMin={72}\r\n              autoHeightMax={425}\r\n              className={`${s.contentInScroll}`}>\r\n                {ingredientsInOrder\r\n                .map((ingredient: IIngredient, i:number) => ingredient.type !== 'bun' &&\r\n                  <IngredientInOrder key={ingredient.id} moveInOrder={moveInOrder} index={i} _id={ingredient._id} />\r\n                )}\r\n              </Scrollbars>\r\n              {bunTopBottom('bottom')}\r\n\r\n              <div className={`${s.totalPrice} mb-10`}>\r\n                {\r\n                sum > 0 && <span className={`${s.price} text text_type_digits-medium`}>{sum} <CurrencyIcon type=\"primary\" /></span>\r\n                }\r\n                <Button \r\n                  type=\"primary\" \r\n                  size=\"medium\" \r\n                  onClick={handleOpenModal}\r\n                  disabled={!isBunInOrder}\r\n                >\r\n                  Оформить заказ\r\n                </Button>\r\n              </div>\r\n          </>)\r\n          :\r\n              <div className={s.emptyCart}><BurgerIcon type=\"primary\" /></div>\r\n          }\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n  \r\n//export default BurgerConstructor;","\r\nimport { useEffect } from 'react';\r\nimport { BurgerIngredients } from '../components/BurgerIngredients';\r\nimport { BurgerConstructor }from '../components/BurgerConstructor';\r\nimport { TAppState } from '../services/reducers';\r\nimport { Loader } from '../components/Loader';\r\nimport { useAppThunkDispatch, useAppSelector } from '../utils/hooks';\r\nimport { getIngredients } from '../services/actions';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider } from 'react-dnd';\r\n\r\nimport \"../styles/globals.css\";\r\nimport \"../styles/fonts.css\";\r\n\r\n\r\nexport const HomePage = () => {\r\nconst { ingredients, \r\n        ingredientsSuccess, \r\n        ingredientsRequest, \r\n        ingredientsFailed } = useAppSelector((store: TAppState) => store.ingredient);\r\nconst dispatch = useAppThunkDispatch();\r\n\r\nuseEffect(() => {\r\n  dispatch(getIngredients())\r\n}, [dispatch]);\r\n\r\n    return (\r\n          <main>\r\n            {ingredientsFailed && <p>Произошла ошибка при получении данных</p>}\r\n            {ingredientsRequest && <Loader />}\r\n            \r\n            {ingredientsSuccess && ingredients.length > 0 &&\r\n            <DndProvider backend={HTML5Backend}>\r\n              <BurgerIngredients />\r\n              <BurgerConstructor />\r\n            </DndProvider>\r\n            }\r\n          </main>\r\n      );\r\n}","import { FC, useEffect } from 'react';\r\nimport { useAppThunkDispatch, useAppSelector } from '../../utils/hooks';\r\nimport { IIngredient } from '../../utils/types';\r\nimport { TAppState } from '../../services/reducers';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getIngredients } from '../../services/actions';\r\n\r\nimport s from './IngredientDetails.module.css';\r\n\r\ninterface IIngredientDetailsProps {\r\n    type?: string;\r\n}\r\n\r\nexport const IngredientDetails: FC<IIngredientDetailsProps> = ({ type }) => {\r\n    const { ingredients, ingredientsSuccess } = useAppSelector((store: TAppState) => store.ingredient);\r\n    const typeIsPage = type === \"page\";\r\n    const { id } = useParams<{ id?: string }>();\r\n    const dispatch = useAppThunkDispatch();\r\n\r\n    useEffect(() => {\r\n        if (typeIsPage) {\r\n           dispatch(getIngredients())\r\n        }\r\n      }, [typeIsPage, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            {ingredientsSuccess && ingredients.length > 0 &&\r\n             ingredients\r\n             .filter(({ _id }: IIngredient) => _id === id)\r\n             .map(({ image, name, calories, proteins, fat, carbohydrates, _id }: IIngredient) =>\r\n               <section key={_id} className={s.content}>\r\n                    <img className={`${s.imageCard} pr-5 pl-5`} src={image} alt={name}/>\r\n                    <p className='text text_type_main-medium mt-4 mt-8'>{name}</p>\r\n                    <div className={`${s.description} mt-8`}>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Калории,ккал</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{calories}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Белки, г</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{proteins}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Жиры, г</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{fat}</span>\r\n                            </div>\r\n                            <div>\r\n                                <span className='text text_type_main-default text_color_inactive pb-2'>Углеводы, г</span>\r\n                                <span className='text text_type_digits-default text_color_inactive'>{carbohydrates}</span>\r\n                            </div>\r\n                        </div>\r\n                </section>\r\n             )   \r\n            }\r\n        </>\r\n    )\r\n}        ","import { FC } from 'react';\r\n\r\nconst ProfileOrders: FC = () => {\r\n    return (\r\n        <div>Profile Orders\r\n        </div>\r\n    )\r\n}           \r\nexport default ProfileOrders;","import { ReactNode } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect, useLocation, RouteProps } from 'react-router-dom';\r\nimport { ILocationFrom } from '../utils/types';\r\nimport { TAppState } from '../services/reducers';\r\n\r\ninterface IProtectedRouteProps extends RouteProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ProtectedRoute = ({ children, ...rest }: IProtectedRouteProps) => {\r\n  const { authorized } = useSelector((store: TAppState) => store.user);\r\n  const isLoggedIn = authorized;\r\n  const { pathname, state } = useLocation<ILocationFrom>();\r\n\r\n  return (\r\n      <Route \r\n        {...rest}\r\n        render={() => {\r\n          return isLoggedIn ? (\r\n            children\r\n          ) : (\r\n            <Redirect to={\r\n              {pathname: state?.from || '/login',\r\n              state: {from: pathname }\r\n            }}/>\r\n          )\r\n         }\r\n      }\r\n      />\r\n    );\r\n} ","import { ReactNode } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Redirect, useLocation, RouteProps } from 'react-router-dom';\r\nimport { ILocationFrom } from '../utils/types';\r\nimport { TAppState } from '../services/reducers';\r\n\r\ninterface IPublicRouteProps extends RouteProps {\r\n  children: ReactNode;\r\n  type: string;\r\n}\r\n\r\nexport const PublicRoute = ({ children, type, ...rest }: IPublicRouteProps) => {\r\n  const { authorized } = useSelector((store: TAppState) => store.user);\r\n  const isLoggedIn = authorized;\r\n  const { pathname, state } = useLocation<ILocationFrom>();\r\n\r\n const isPathFromForgotPassword = state?.from === '/forgot-password';\r\n const isPathResetPassword = pathname.includes(\"reset-password\");\r\n\r\n if (!isPathFromForgotPassword && isPathResetPassword) {\r\n    return <Redirect\r\n      to={{\r\n        pathname: '/forgot-password'\r\n      }}\r\n    />\r\n  }\r\n\r\n  return (\r\n    <Route \r\n      {...rest}\r\n      render={() => \r\n        type === \"guest\" && !isLoggedIn ? (\r\n          children\r\n        ) : (\r\n            <Redirect\r\n                to={{\r\n                  pathname: state?.from || \"/\",\r\n                  state: { from: pathname }\r\n                }}\r\n            />\r\n        )\r\n        }\r\n    />\r\n    );\r\n} ","import { MouseEvent } from 'react';\r\nimport { useAppDispatch } from '../utils/hooks';\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport { HomePage, LoginPage, Register, ForgotPassword, ResetPassword, Profile/*, NotFound404*/ } from '../pages';\r\nimport { IngredientDetails } from '../components/IngredientDetails';\r\nimport ProfileOrders from '../components/ProfileOrders/ProfileOrders';\r\nimport { ProtectedRoute } from './ProtectedRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { Modal } from './Modal';\r\nimport { closeModalDetails } from '../services/actions/actionsIngredient';\r\nimport { ILocationModal } from '../utils/types';\r\n\r\nconst SwitchRoute = () => {\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation<{ modal: ILocationModal<unknown> }>();\r\n  const modal = location.state && location.state?.modal;\r\n  const history = useHistory();\r\n\r\n  const handleCloseModal = (event: MouseEvent | undefined) => {\r\n    event?.stopPropagation();\r\n    history.goBack();\r\n    dispatch(closeModalDetails());\r\n}  \r\n\r\n  return (\r\n      <>\r\n        <Switch location={modal || location}>\r\n          <Route path=\"/\" exact={true}>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/ingredients/:id\">\r\n            <IngredientDetails type=\"page\"/>\r\n          </Route>\r\n          \r\n          <PublicRoute path=\"/login\" exact={true} type=\"guest\">\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/register\" exact={true} type=\"guest\">\r\n            <Register />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/forgot-password\" exact={true} type=\"guest\">\r\n            <ForgotPassword />\r\n          </PublicRoute>\r\n          \r\n          <PublicRoute path=\"/reset-password\" exact={true} type=\"guest\">\r\n            <ResetPassword />\r\n          </PublicRoute>\r\n\r\n          <ProtectedRoute path=\"/profile\" exact={true}>\r\n            <Profile />\r\n          </ProtectedRoute>\r\n\r\n          <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n            <ProfileOrders />\r\n          </ProtectedRoute>\r\n        </Switch>\r\n\r\n        {modal && <Route path=\"/ingredients/:id\" children={<Modal onClose={handleCloseModal} header=\"Детали ингредиента\"><IngredientDetails /></Modal>} />}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default SwitchRoute;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Header } from '../Header';\r\nimport SwitchRoute from '../SwitchRoute';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <SwitchRoute />\r\n    </Router>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    POST_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    GET_ORDER_NUMBER_FAILED\r\n} from '../actions/OrderDetails';\r\nimport * as orderActions from '../actions/actionsOrderDetails';\r\nimport { TActions, TActionsCreators } from '../../utils/types';\r\n\r\nexport type TOrderState = {\r\n  orderRequest: boolean;\r\n  orderFailed: boolean;\r\n  orderSuccess: boolean;\r\n  number: string | null;\r\n}\r\n\r\nconst initialState: TOrderState = {\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n    orderSuccess: false,\r\n    number: null\r\n}\r\n\r\nexport type TOrderAction = TActions<TActionsCreators<typeof orderActions>>;\r\n\r\nexport const orderReducer = (state = initialState, action: TOrderAction): TOrderState => {\r\n    switch (action.type) {\r\n        case POST_ORDER_NUMBER_REQUEST: {\r\n          return {\r\n              ...state,\r\n              orderRequest: true,\r\n              orderSuccess: false,\r\n              orderFailed: false,\r\n          };\r\n        }\r\n        case GET_ORDER_NUMBER_SUCCESS: {\r\n          return { \r\n              ...state, \r\n              number: action.value,\r\n              orderSuccess: action.success,\r\n              orderRequest: false,\r\n          };\r\n        }\r\n        case GET_ORDER_NUMBER_FAILED: {\r\n          return { \r\n              ...state,\r\n              orderRequest: false,\r\n              orderSuccess: false,\r\n              orderFailed: true,\r\n          };\r\n        }\r\n        default: {\r\n          return state\r\n        }\r\n      }\r\n};","import {\r\n    INIT_USER,\r\n    AUTHORIZED,\r\n    POST_LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n\r\n    POST_LOGOUT, LOGOUT_FAILED, LOGOUT_SUCCESS,\r\n    POST_UPDATE_TOKEN, UPDATE_TOKEN_SUCCESS, UPDATE_TOKEN_FAILED,\r\n    GET_INFO_USER, GET_INFO_SUCCESS, GET_INFO_FAILED,\r\n    PATCH_INFO_USER, PATCH_INFO_SUCCESS, PATCH_INFO_FAILED,\r\n    POST_REGISTRY_USER, RESPONSE_SUCCESS_REGISTRY, RESPONSE_FAILED_REGISTRY,\r\n    POST_PASSWORD_REQUEST, RESPONSE_FAILED_PASSWORD, RESPONSE_SUCCESS_PASSWORD,\r\n    POST_NEW_PASSWORD_REQUEST, RESPONSE_FAILED_NEW_PASSWORD, RESPONSE_SUCCESS_NEW_PASSWORD\r\n} from '../actions/User';\r\nimport * as userActions from '../actions/actionsUser';\r\nimport { TActions, TActionsCreators, IUser } from '../../utils/types';\r\n\r\nexport type TUserState = {\r\n  loginRequest: boolean;\r\n  loginFailed: boolean;\r\n  loginSuccess: boolean;\r\n\r\n  logoutRequest: boolean;\r\n  logoutFailed: boolean;\r\n  logoutSuccess: boolean;\r\n\r\n  tokenRequest: boolean;\r\n  tokenFailed: boolean;\r\n  tokenSuccess: boolean;\r\n\r\n  getUserInfoRequest: boolean;\r\n  getUserInfoFailed: boolean;\r\n  getUserInfoSuccess: boolean;\r\n\r\n  patchUserInfoRequest: boolean;\r\n  patchUserInfoFailed: boolean;\r\n  patchUserInfoSuccess: boolean;\r\n\r\n  registerRequest: boolean;\r\n  registerFailed: boolean;\r\n  registerSuccess: boolean;\r\n\r\n  resetPasswordRequest: boolean;\r\n  resetPasswordFailed: boolean;\r\n  resetPasswordSuccess: boolean;\r\n\r\n  accessToken?: string;\r\n  refreshToken?: string;\r\n  authorized: boolean;\r\n  user?: IUser | null;\r\n}\r\n\r\nconst initialState: TUserState = {\r\n    loginRequest: false,\r\n    loginFailed: false,\r\n    loginSuccess: false,\r\n\r\n    logoutRequest: false,\r\n    logoutFailed: false,\r\n    logoutSuccess: false,\r\n\r\n    tokenRequest: false,\r\n    tokenFailed: false,\r\n    tokenSuccess: false,\r\n\r\n    getUserInfoRequest: false,\r\n    getUserInfoFailed: false,\r\n    getUserInfoSuccess: false,\r\n\r\n    patchUserInfoRequest: false,\r\n    patchUserInfoFailed: false,\r\n    patchUserInfoSuccess: false,\r\n\r\n    registerRequest: false,\r\n    registerFailed: false,\r\n    registerSuccess: false,\r\n\r\n    resetPasswordRequest: false,\r\n    resetPasswordFailed: false,\r\n    resetPasswordSuccess: false,\r\n\r\n    accessToken: undefined,\r\n    refreshToken: undefined,\r\n    \r\n    authorized: false,\r\n    user: JSON.parse(localStorage.getItem(\"user\") ?? \"null\")\r\n}\r\n\r\nexport type TUserAction = TActions<TActionsCreators<typeof userActions>>;\r\n\r\nexport const userReducer = (state = initialState, action: TUserAction): TUserState => {\r\n    switch (action.type) {\r\n        case AUTHORIZED: {\r\n          return state;\r\n        }\r\n        case INIT_USER: {\r\n          return {\r\n            ...state,\r\n            authorized: true,\r\n          }  \r\n        }\r\n        case POST_LOGIN_USER: {\r\n          return {\r\n              ...state,\r\n              loginRequest: true,\r\n              loginSuccess: false,\r\n              loginFailed: false,\r\n          };\r\n        }\r\n        case LOGIN_USER_SUCCESS: {\r\n            const tokens = {\"refreshToken\": action.refreshToken, \"accessToken\": action.accessToken};\r\n            localStorage.setItem('tokens', JSON.stringify(tokens));\r\n            localStorage.setItem('user', JSON.stringify({\"email\": action.user.email, \"name\": action.user.name}));\r\n            \r\n            return { \r\n              ...state,\r\n              accessToken: action.accessToken,\r\n              refreshToken: action.refreshToken,\r\n              loginSuccess: action.success,\r\n              user: action.user,\r\n              loginRequest: false,\r\n\r\n              authorized: true,\r\n          };\r\n        }\r\n        case LOGIN_USER_FAILED: {\r\n          return { \r\n              ...state,\r\n              loginRequest: false,\r\n              loginSuccess: false,\r\n              loginFailed: true,\r\n          };\r\n        }\r\n        case POST_LOGOUT: {\r\n          return { \r\n              ...state,\r\n              logoutRequest: true,\r\n              logoutSuccess: false,\r\n              logoutFailed: false,\r\n          };\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n          localStorage.clear();\r\n          return { \r\n              ...state,\r\n              logoutSuccess: true,\r\n              logoutRequest: false,\r\n              user: null,\r\n\r\n              authorized: false,\r\n          };\r\n        }\r\n        case LOGOUT_FAILED: {\r\n          return {\r\n            ...state,\r\n            logoutRequest: false,\r\n            logoutSuccess: false,\r\n            logoutFailed: true,\r\n        };\r\n        }\r\n        case POST_UPDATE_TOKEN: {\r\n            return {\r\n                ...state,\r\n                tokenRequest: true,\r\n                tokenSuccess: false,\r\n                tokenFailed: false,\r\n            };\r\n          }\r\n          case UPDATE_TOKEN_SUCCESS: {\r\n            const tokens = {\"refreshToken\": action.refreshToken, \"accessToken\": action.accessToken};\r\n            localStorage.setItem('tokens', JSON.stringify(tokens));\r\n            return { \r\n                ...state,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n                tokenSuccess: action.success,\r\n                tokenRequest: false,\r\n            };\r\n          }\r\n          case UPDATE_TOKEN_FAILED: {\r\n            return { \r\n                ...state,\r\n                tokenRequest: false,\r\n                tokenSuccess: false,\r\n                tokenFailed: true,\r\n            };\r\n          }\r\n          case GET_INFO_USER: {\r\n            return {\r\n                ...state,\r\n                getUserInfoRequest: true,\r\n                getUserInfoSuccess: false,\r\n                getUserInfoFailed: false,\r\n            };\r\n          }\r\n          case GET_INFO_SUCCESS: {\r\n            return { \r\n                ...state,\r\n                user: action.user,\r\n                getUserInfoSuccess: action.success,\r\n                getUserInfoRequest: false,\r\n            };\r\n          }\r\n          case GET_INFO_FAILED: {\r\n            return { \r\n                ...state,\r\n                getUserInfoRequest: false,\r\n                getUserInfoSuccess: false,\r\n                getUserInfoFailed: true,\r\n            };\r\n          }\r\n          case PATCH_INFO_USER: {\r\n            return {\r\n                ...state,\r\n                patchUserInfoRequest: true,\r\n                patchUserInfoSuccess: false,\r\n                patchUserInfoFailed: false,\r\n            };\r\n          }\r\n          case PATCH_INFO_SUCCESS: {\r\n            return { \r\n                ...state,\r\n                user: action.user,\r\n                patchUserInfoSuccess: action.success,\r\n                patchUserInfoRequest: false,\r\n            };\r\n          }\r\n          case PATCH_INFO_FAILED: {\r\n            return { \r\n                ...state,\r\n                patchUserInfoRequest: false,\r\n                patchUserInfoSuccess: false,\r\n                patchUserInfoFailed: true,\r\n            };\r\n          }\r\n          case POST_REGISTRY_USER: {\r\n            return {\r\n                ...state,\r\n                registerRequest: true,\r\n                registerSuccess: false,\r\n                registerFailed: false,\r\n            };\r\n          }\r\n          case RESPONSE_SUCCESS_REGISTRY: {\r\n            return { \r\n                ...state,\r\n                accessToken: action.accessToken,\r\n                refreshToken: action.refreshToken,\r\n                registerSuccess: action.success,\r\n                registerRequest: false\r\n            };\r\n          }\r\n          case RESPONSE_FAILED_REGISTRY: {\r\n            return { \r\n                ...state,\r\n                registerRequest: false,\r\n                registerSuccess: false,\r\n                registerFailed: true,\r\n            };\r\n          }\r\n          case POST_PASSWORD_REQUEST || POST_NEW_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: true,\r\n                resetPasswordSuccess: false,\r\n                resetPasswordFailed: false,\r\n            };\r\n          }\r\n          case RESPONSE_SUCCESS_PASSWORD || RESPONSE_SUCCESS_NEW_PASSWORD: {\r\n            return { \r\n                ...state,\r\n                resetPasswordSuccess: action.success,\r\n                resetPasswordRequest: false,\r\n            };\r\n          }\r\n          case RESPONSE_FAILED_PASSWORD || RESPONSE_FAILED_NEW_PASSWORD: {\r\n            return { \r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                resetPasswordSuccess: false,\r\n                resetPasswordFailed: true,\r\n            };\r\n          }\r\n          default: {\r\n              return state\r\n          }\r\n      }\r\n};","\r\nimport { combineReducers } from 'redux';\r\nimport { orderReducer, TOrderState, TOrderAction } from './OrderDetails';\r\nimport { userReducer, TUserState, TUserAction } from './User';\r\nimport {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    DELETE_INGREDIENTS,\r\n    ADD_INGREDIENT_IN_ORDER,\r\n    DELETE_INGREDIENT_IN_ORDER,\r\n    ADD_INGREDIENT_BUN_IN_ORDER,\r\n    UPDATE_LOCATION_INGREDIENT_IN_ORDER,\r\n    CLOSE_MODAL_DETAILS,\r\n    OPEN_MODAL_DETAILS\r\n} from '../actions';\r\nimport update from 'immutability-helper';\r\nimport { IIngredient, TActions, TActionsCreators } from '../../utils/types';\r\nimport * as ingredientActions from '../actions/actionsIngredient';\r\n\r\ntype TIngredientState = {\r\n  ingredientsRequest: boolean;\r\n  ingredientsFailed: boolean;\r\n  ingredientsSuccess: boolean;\r\n  openIngredientId: string | null;\r\n  ingredients: IIngredient[];\r\n  ingredientsInOrder: IIngredient[];\r\n};\r\n\r\nconst initialState: TIngredientState = {\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n    ingredientsSuccess: false,\r\n\r\n    openIngredientId: null,\r\n\r\n    ingredients: [] as IIngredient[],\r\n    ingredientsInOrder: [] as IIngredient[],\r\n}\r\n\r\ntype TIngredientAction = TActions<TActionsCreators<typeof ingredientActions>>;\r\n\r\nexport const ingredientsReducer = (state = initialState, action: TIngredientAction): TIngredientState => {\r\n    switch (action.type) {\r\n      case GET_INGREDIENTS_REQUEST: {\r\n        return {\r\n            ...state,\r\n            ingredientsRequest: true,\r\n            ingredientsFailed: false,\r\n            ingredientsSuccess: false\r\n        };\r\n      }\r\n      case GET_INGREDIENTS_SUCCESS: {\r\n        return { \r\n            ...state, \r\n            ingredients: action.ingredients, \r\n            ingredientsSuccess: action.success,\r\n            ingredientsRequest: false, \r\n        };\r\n      }\r\n      case GET_INGREDIENTS_FAILED: {\r\n        return { \r\n            ...state, \r\n            ingredientsSuccess: false,\r\n            ingredientsRequest: false,\r\n            ingredientsFailed: true,\r\n              };\r\n      }\r\n      case ADD_INGREDIENT_IN_ORDER: {\r\n        return {\r\n          ...state,\r\n          ingredientsInOrder: [\r\n            ...state.ingredientsInOrder,\r\n            ...state.ingredients.filter(item => item._id === action._id).map(item => item ? {...item, id: action.id } : item),\r\n          ],\r\n        };\r\n      }\r\n      case ADD_INGREDIENT_BUN_IN_ORDER: {\r\n        return {\r\n          ...state,\r\n          ingredientsInOrder: [\r\n            ...state.ingredientsInOrder.filter(item => item.type !== 'bun'),\r\n            ...state.ingredients.filter(item => item._id === action._id),\r\n          ]\r\n        };\r\n      }\r\n      case DELETE_INGREDIENT_IN_ORDER: {\r\n        return { \r\n          ...state, \r\n          ingredientsInOrder: [...state.ingredientsInOrder].filter((value, index, array) => index !== array.findIndex((i) => i._id === action._id)),\r\n        };\r\n      }\r\n      case DELETE_INGREDIENTS: {\r\n        return { \r\n          ...state, \r\n          ingredientsInOrder: [],\r\n        };\r\n      }\r\n      case UPDATE_LOCATION_INGREDIENT_IN_ORDER: {\r\n        return { \r\n          ...state, \r\n          ingredientsInOrder: update(state.ingredientsInOrder, {\r\n            $splice: [\r\n              [action.dragIndex, 1],\r\n              [action.hoverIndex, 0, state.ingredientsInOrder[action.dragIndex]],\r\n            ],\r\n          }),\r\n        };\r\n      }\r\n      case OPEN_MODAL_DETAILS: {\r\n        return {\r\n            ...state,\r\n            openIngredientId: action._id,\r\n        };\r\n      }\r\n      case CLOSE_MODAL_DETAILS: {\r\n        return { \r\n            ...state,\r\n            openIngredientId: state.openIngredientId = null,\r\n        };\r\n      }\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n};\r\n\r\nexport type TAppState = {\r\n  ingredient: TIngredientState,\r\n  order: TOrderState,\r\n  user: TUserState\r\n}\r\n\r\nexport type TAppAction = TUserAction | TOrderAction | TIngredientAction;\r\n  \r\nexport const rootReducer = combineReducers<TAppState>({\r\n    ingredient: ingredientsReducer,\r\n    order: orderReducer,\r\n    user: userReducer,\r\n});\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\r\nimport { rootReducer, TAppState, TAppAction } from '../services/reducers';\r\nimport { userInitMiddleware } from './userInitMiddleware';\r\nimport { authUser } from './actions/actionsUser';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']\r\n    ? (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(userInitMiddleware, thunk as ThunkMiddleware));\r\n\r\nexport const store = createStore<TAppState, TAppAction, unknown, unknown>(rootReducer, enhancer);\r\n\r\nstore.dispatch(authUser());\r\n","import { Middleware } from \"redux\";\r\nimport { initUser } from './actions/actionsUser';\r\nimport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  GET_USER,\r\n  PATCH_USER,\r\n  AUTHORIZED\r\n} from './actions/User';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { JWTDeCode } from '../utils/types';\r\nimport { TAppState, TAppAction } from '../services/reducers';\r\nimport { login, logout, getUser, patchUser, updateToken } from './actions/User';\r\nimport { GET_ORDER, getOrderNumber } from './actions/OrderDetails';\r\nimport { TThunkDispatch } from '../utils/hooks';\r\n\r\nexport const userInitMiddleware: Middleware<{}, TAppState> = store => (next: TThunkDispatch)  => (action: TAppAction) => {\r\n  const token = localStorage.getItem('tokens') ?? null;\r\n    \r\n        if (token !== null) {\r\n          const { accessToken, refreshToken } = JSON.parse(token);\r\n          const decoder: JWTDeCode = jwtDecode(accessToken);\r\n          const expiredToken = decoder && decoder.exp < Date.now() / 1000;\r\n\r\n          switch (action.type) {\r\n            case AUTHORIZED: {\r\n              next(initUser());\r\n              break;\r\n            }\r\n            case LOGOUT: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(logout({ refreshToken: store.getState().user.refreshToken }));\r\n                }, 1000)\r\n              } else {\r\n                next(logout({ refreshToken }));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case GET_USER: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(getUser({ accessToken: store.getState().user.accessToken }));\r\n                }, 1000)\r\n              } else {\r\n                next(getUser({ accessToken }));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case PATCH_USER: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(patchUser(action.user, store.getState().user.accessToken ?? accessToken));\r\n                }, 1000)\r\n              } else {\r\n                next(patchUser(action.user, accessToken));\r\n              }\r\n\r\n              break;\r\n            }\r\n            case GET_ORDER: {\r\n              if (expiredToken) {\r\n                next(updateToken({refreshToken, accessToken}));\r\n                setTimeout(() => {\r\n                  next(getOrderNumber(action.ingredientIds, store.getState().user.accessToken ?? accessToken));\r\n                }, 1000)\r\n              } else {\r\n                next(getOrderNumber(action.ingredientIds, accessToken));\r\n              }\r\n\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n        \r\n        } else {\r\n\r\n          if (action.type === LOGIN) {\r\n            next(login(action.user));\r\n            return;\r\n          }\r\n\r\n        }  \r\n  next(action);\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store } from '../src/services/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1WL4t\",\"navigation\":\"Header_navigation__Q4RU8\",\"content\":\"Header_content__2KnVC\",\"links\":\"Header_links__PoTI8\",\"logo\":\"Header_logo__2K2u1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BurgerIngredients_root__3V62U\",\"tabs\":\"BurgerIngredients_tabs__1b38V\",\"contentInScroll\":\"BurgerIngredients_contentInScroll__25t9G\",\"scrollTrackVertical\":\"BurgerIngredients_scrollTrackVertical__G5jr6\",\"scrollThumbVertical\":\"BurgerIngredients_scrollThumbVertical__Hboh8\",\"ingredients\":\"BurgerIngredients_ingredients__2wnGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"IngredientInList_card__1-ZGK\",\"price\":\"IngredientInList_price__1W7OA\",\"name\":\"IngredientInList_name__2H5-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1ZJHi\",\"close\":\"Modal_close__3BxHY\",\"head\":\"Modal_head__3-MyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"IngredientDetails_description__2TvCn\",\"imageCard\":\"IngredientDetails_imageCard__2plH6\",\"content\":\"IngredientDetails_content__2kMLt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderNumber\":\"OrderDetails_orderNumber__1gEON\",\"content\":\"OrderDetails_content__1XYB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fillings\":\"IngredientInOrder_fillings__1a539\",\"bunTopBottom\":\"IngredientInOrder_bunTopBottom__1PWIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loader_wrap__1KBmP\",\"image\":\"Loader_image__JMj5m\"};"],"sourceRoot":""}